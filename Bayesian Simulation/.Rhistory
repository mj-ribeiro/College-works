for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 250
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 250
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 250
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 250
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 250
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 250
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 250
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 250
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 250
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 300000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 300000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 300000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 300000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 300000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 300000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 500000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 500000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 500000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 500000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 500000
s = 0
nn = 100
I = c()
for (j in 1:nn) {
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
I[j] = (t_max - t_min)/n *s
}
mean(I)
sd(I)
hist(I)
for (j in 1:nn) {
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
I[j] = (t_max - t_min)/n *s
}
mean(I)
sd(I)
hist(I, breaks = 30, col='lightgreen')
hist(I, breaks = 30, col='lightgreen', main='Histogram of Integral values')
m = 1e+5
y = numeric(m)
phi = numeric(m)
curve(rbeta(x, 2, 2))
curve(pbeta(x, 2, 2))
curve(pbeta(x, 2, 20))
curve(pbeta(x, 2, 2))
curve(pbeta(x, 20, 2))
curve(pbeta(x, 10, 2))
curve(pbeta(x, 10, 20))
m = 1e+5
y = numeric(m)
phi = numeric(m)
for(i in 1:m){
phi[i] = rbeta(1, 2, 2)
y[i] = rbinom(1, size = 10, phi[i])
}
phi = rbeta(1, 2, 2)
y = rbinom(1, size = 10, phi)
hist(phi)
hist(y)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 1, 0.3)
rbinom(1, size = 1, 0.3)
rbinom(1, size = 1, 0.3)
rbinom(1, size = 2, 0.3)
rbinom(1, size = 2, 0.3)
rbinom(1, size = 2, 0.3)
rbinom(1, size = 2, 0.3)
rbinom(1, size = 2, 0.3)
rbinom(1, size = 2, 0.3)
rbinom(1, size = 2, 0.3)
rbinom(1, size = 2, 0.3)
rbinom(1, size = 2, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
table(y)
phi = rbeta(1, 2, 2)
y = rbinom(1, size = 10, phi)
table(y)
hist(y)
y = rbinom(1, size = 10, phi)
table(y)
phi = rbeta(m, 2, 2)
y = rbinom(m, size = 10, phi)
table(y)
table(y)/m
plot(table(y)/m)
plot(table(y)/m, main='Beta Binomial distribution of y')
plot(table(y)/m, main='Beta Binomial distribution of y', ylabel='Probability')
plot(table(y)/m, main='Beta Binomial distribution of y', ylab='Probability')
plot(table(y)/m, main='Beta Binomial distribution of y')
plot(table(y)/m, main='Beta Binomial distribution of y', ylab='Probability')
plot(table(y)/m, main='Beta Binomial distribution of y', ylab='Probability')
81/256
81/256*1500
500/474.61
1.053497^(-1/4)
81/256*1500*2^(-4)
(1.5*0.03)/0.03
1.5^2
0.76+2.26
0.76+3.78
1/0.987
500^0.25
500^0.25* 1500^(-1/4)
500^0.25* 1500^(-1/4)*3/4
1.054^(-1/4)
81/256*1500
81/256*1500
500/(81/256*1500)
(500/(81/256*1500) )^(-1/4)
500^(1/4)*1500^(-1/4)*(86/256)^(1/4)
500/1500
81/256
0.33333/0.3164
(1500/(81/256*500) )^(-1/4)
(1500/(81/256*500) )
(1500/(81/256*500) )^(-1/4)
81/256*500*2^(-4)
10/17
0.6*17
1/(1-0.68)
120/18
9*0.6
8*0.6
exp(4.76)
exp(4.7592)
exp(4.6793)
exp(4.7592)
exp(4.6762)
0.25*60
setwd("D:/Git projects/college_works/Bayesian Simulation")
