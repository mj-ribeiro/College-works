B = B - solve(H)%*%G
L = 1/2*log(2/pi) - 1/2*log(sig2) - 1/(2*sig2*T)*sum( (y2 - beta1 - beta2*x2)^2)
cat('G:', G, 'L:', L, '\n')
beta1 = B[1]
beta2 = B[2]
g1 = 1/(sig2*T) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(T*sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -beta2/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
B = B - solve(H)%*%G
L = 1/2*log(2/pi) - 1/2*log(sig2) - 1/(2*sig2*T)*sum( (y2 - beta1 - beta2*x2)^2)
cat('G:', G, 'L:', L, '\n')
beta1 = B[1]
beta2 = B[2]
g1 = 1/(sig2*T) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(T*sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -beta2/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
B = B - solve(H)%*%G
L = 1/2*log(2/pi) - 1/2*log(sig2) - 1/(2*sig2*T)*sum( (y2 - beta1 - beta2*x2)^2)
cat('G:', G, 'L:', L, '\n')
beta1 = B[1]
beta2 = B[2]
g1 = 1/(sig2*T) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(T*sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -beta2/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
B = B - solve(H)%*%G
L = 1/2*log(2/pi) - 1/2*log(sig2) - 1/(2*sig2*T)*sum( (y2 - beta1 - beta2*x2)^2)
cat('G:', G, 'L:', L, '\n')
beta1 = B[1]
beta2 = B[2]
g1 = 1/(sig2*T) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(T*sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -beta2/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
B = B - solve(H)%*%G
L = 1/2*log(2/pi) - 1/2*log(sig2) - 1/(2*sig2*T)*sum( (y2 - beta1 - beta2*x2)^2)
cat('G:', G, 'L:', L, '\n')
beta1 = B[1]
beta2 = B[2]
g1 = 1/(sig2*T) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(T*sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -beta2/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
B = B - solve(H)%*%G
L = 1/2*log(2/pi) - 1/2*log(sig2) - 1/(2*sig2*T)*sum( (y2 - beta1 - beta2*x2)^2)
cat('G:', G, 'L:', L, '\n')
beta1 = B[1]
beta2 = B[2]
g1 = 1/(sig2*T) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(T*sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -beta2/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
B = B - solve(H)%*%G
L = 1/2*log(2/pi) - 1/2*log(sig2) - 1/(2*sig2*T)*sum( (y2 - beta1 - beta2*x2)^2)
cat('G:', G, 'L:', L, '\n')
beta1 = B[1]
beta2 = B[2]
g1 = 1/(sig2*T) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(T*sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -beta2/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
B = B - solve(H)%*%G
L = 1/2*log(2/pi) - 1/2*log(sig2) - 1/(2*sig2*T)*sum( (y2 - beta1 - beta2*x2)^2)
cat('G:', G, 'L:', L, '\n')
beta1 = B[1]
beta2 = B[2]
g1 = 1/(sig2*T) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(T*sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -beta2/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
B = B - solve(H)%*%G
L = 1/2*log(2/pi) - 1/2*log(sig2) - 1/(2*sig2*T)*sum( (y2 - beta1 - beta2*x2)^2)
cat('G:', G, 'L:', L, '\n')
beta1 = B[1]
beta2 = B[2]
g1 = 1/(sig2*T) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(T*sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -beta2/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
B = B - solve(H)%*%G
L = 1/2*log(2/pi) - 1/2*log(sig2) - 1/(2*sig2*T)*sum( (y2 - beta1 - beta2*x2)^2)
cat('G:', G, 'L:', L, '\n')
beta1 = B[1]
beta2 = B[2]
g1 = 1/(sig2*T) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(T*sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -beta2/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
B = B - solve(H)%*%G
L = 1/2*log(2/pi) - 1/2*log(sig2) - 1/(2*sig2*T)*sum( (y2 - beta1 - beta2*x2)^2)
cat('G:', G, 'L:', L, '\n')
beta1 = B[1]
beta2 = B[2]
g1 = 1/(sig2*T) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(T*sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -beta2/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
B = B - solve(H)%*%G
L = 1/2*log(2/pi) - 1/2*log(sig2) - 1/(2*sig2*T)*sum( (y2 - beta1 - beta2*x2)^2)
cat('G:', G, 'L:', L, '\n')
beta1 = B[1]
beta2 = B[2]
g1 = 1/(sig2*T) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(T*sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -beta2/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
B = B - solve(H)%*%G
L = 1/2*log(2/pi) - 1/2*log(sig2) - 1/(2*sig2*T)*sum( (y2 - beta1 - beta2*x2)^2)
cat('G:', G, 'L:', L, '\n')
beta1 = B[1]
beta2 = B[2]
g1 = 1/(sig2*T) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(T*sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -beta2/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
B = B - solve(H)%*%G
L = 1/2*log(2/pi) - 1/2*log(sig2) - 1/(2*sig2*T)*sum( (y2 - beta1 - beta2*x2)^2)
cat('G:', G, 'L:', L, '\n')
H
y2 = c(2.850, 3.105, 5.693, 8.101, 10.387, 3, 44, 5.5, 0.8)
x2 = c(3, 6, 12, 3, 1.4, 0.9, -1, 22, 4.3)
sig2 = 1e6
T = length(x2)
beta1 = 0.11
beta2 = -100
B = rbind(beta1, beta2)
g1 = 1/(sig2*T) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(T*sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -beta2/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
tol = 1/1e5
matrix = ( data=c(−4,  0.228, 0.228, -0.547), ncol=2, nrow=2)
matrix = (data=c(−4,  0.228, 0.228, -0.547), ncol=2, nrow=2)
matrix = (c(−4,  0.228, 0.228, -0.547), ncol=2, nrow=2 )
m = matrix(c(−4,  0.228, 0.228, -0.547), ncol=2, nrow=2)
m2 = matrix(c(0.931, 0.280), ncol=1, nrow=2)
m2 = matrix(c(0.931, 0.280), ncol=1, nrow=2)
th = matrix(c(0.5, 1.5), ncol=1, nrow=2)
th - solve(m1)*m2
m1 = matrix(c(−4,  0.228, 0.228, -0.547), ncol=2, nrow=2)
m2 = matrix(c(0.931, 0.280), ncol=1, nrow=2)
th = matrix(c(0.5, 1.5), ncol=1, nrow=2)
th = matrix(c(0.5, 1.5), ncol=1, nrow=2)
th - solve(m1)%*%m2
m1
m1 = matrix(c(−4,  -0.228, -0.228, -0.547), ncol=2, nrow=2)
m2 = matrix(c(0.931, 0.280), ncol=1, nrow=2)
th = matrix(c(0.5, 1.5), ncol=1, nrow=2)
th - solve(m1)%*%m2
y2 = c(2.850, 3.105, 5.693, 8.101, 10.387, 3, 44, 5.5, 0.8)
x2 = c(3, 6, 12, 3, 1.4, 0.9, -1, 22, 4.3)
sig2 = 1e6
T = length(x2)
beta1 = 0.11
beta2 = -100
B = rbind(beta1, beta2)
g1 = 1/(sig2*T) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(T*sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -beta2/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
tol = 1/1e5
while (tol > min(G)){
beta1 = B[1]
beta2 = B[2]
L = 1/2*log(2/pi) - 1/2*log(sig2) - 1/(2*sig2*T)*sum( (y2 - beta1 - beta2*x2)^2)
g1 = 1/(sig2*T) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(T*sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -beta2/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
B = B - solve(H)%*%G
cat('G:', G, 'L:', L, '\n')
}
while (tol < min(G)){
beta1 = B[1]
beta2 = B[2]
L = 1/2*log(2/pi) - 1/2*log(sig2) - 1/(2*sig2*T)*sum( (y2 - beta1 - beta2*x2)^2)
g1 = 1/(sig2*T) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(T*sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -beta2/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
B = B - solve(H)%*%G
cat('G:', G, 'L:', L, '\n')
}
sig2 = 1.5
T = length(x2)
beta1 = 0.11
beta2 = -100
B = rbind(beta1, beta2)
g1 = 1/(sig2*T) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(T*sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -beta2/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
tol = 1/1e5
while (tol < min(G)){
beta1 = B[1]
beta2 = B[2]
L = 1/2*log(2/pi) - 1/2*log(sig2) - 1/(2*sig2*T)*sum( (y2 - beta1 - beta2*x2)^2)
g1 = 1/(sig2*T) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(T*sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -beta2/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
B = B - solve(H)%*%G
cat('G:', G, 'L:', L, '\n')
}
beta1 = 0.11
beta2 = 0
B = rbind(beta1, beta2)
g1 = 1/(sig2*T) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(T*sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -beta2/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
tol = 1/1e5
while (tol < min(G)){
beta1 = B[1]
beta2 = B[2]
L = 1/2*log(2/pi) - 1/2*log(sig2) - 1/(2*sig2*T)*sum( (y2 - beta1 - beta2*x2)^2)
g1 = 1/(sig2*T) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(T*sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -beta2/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
B = B - solve(H)%*%G
cat('G:', G, 'L:', L, '\n')
}
while (tol < min(G)){
beta1 = B[1]
beta2 = B[2]
L = 1/2*log(2/pi) - 1/2*log(sig2) - 1/(2*sig2*T)*sum( (y2 - beta1 - beta2*x2)^2)
g1 = 1/(sig2*T) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(T*sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -beta2/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
B = B - solve(H)%*%G
cat('G:', G, 'L:', L, '\n')
}
setwd("D:/Git projects/college_works/Bayesian Simulation")
y2 = c(2.850, 3.105, 5.693, 8.101, 10.387, 3, 44, 5.5, 0.8)
x2 = c(3, 6, 12, 3, 1.4, 0.9, -1, 22, 4.3)
sig2 = sd(y2)
T = length(x2)
beta1 = 1
beta2 = 0.2
B = rbind(beta1, beta2)
g1 = 1/(T*sig2) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -1/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
tol = 1/1e4
l = 0.1
while (tol < max(G)){
beta1 = B[1]
beta2 = B[2]
L = 1/2*log(2/pi) - 1/2*log(sig2) - 1/(2*sig2*T)*sum( (y2 - beta1 - beta2*x2)^2)
g1 = 1/(T*sig2) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -1/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
B = B - l*solve(H)%*%G
cat('G:', G, 'L:', L, '\n')
}
reg2 = lm(y2~x2)
reg2
H
G
cat('The gradient is given by:\n', G)
mv_reg = function(y2, x2){
sig2 = sd(y2)
T = length(x2)
beta1 = 1
beta2 = 0.2
B = rbind(beta1, beta2)
g1 = 1/(T*sig2) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -1/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
tol = 1/1e4
l = 0.1
while (tol < max(G)){
beta1 = B[1]
beta2 = B[2]
L = 1/2*log(2/pi) - 1/2*log(sig2) - 1/(2*sig2*T)*sum( (y2 - beta1 - beta2*x2)^2)
g1 = 1/(T*sig2) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -1/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
B = B - l*solve(H)%*%G
cat('G:', G, 'L:', L, '\n')
}
cat('The gradient is given by:\n', G)
cat('Hessian is given by: \n', H)
}
mv_reg(y2, x2)
y = c(2.850, 3.105, 5.693, 8.101, 10.387)
x = c(0, 1, 2, 3, 4)
mv_reg(y, x)
cat('\n')
cat('The gradient is given by:\n', G, '\n')
cat('\n Hessian is given by: \n', H)
cat('The parameters are given by: \n', B)
mv_reg = function(y2, x2){
sig2 = sd(y2)
T = length(x2)
beta1 = 1
beta2 = 0.2
B = rbind(beta1, beta2)
g1 = 1/(T*sig2) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -1/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
tol = 1/1e4
l = 0.1
while (tol < max(G)){
beta1 = B[1]
beta2 = B[2]
L = 1/2*log(2/pi) - 1/2*log(sig2) - 1/(2*sig2*T)*sum( (y2 - beta1 - beta2*x2)^2)
g1 = 1/(T*sig2) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -1/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
B = B - l*solve(H)%*%G
cat('G:', G, 'L:', L, '\n')
}
cat('\n')
cat('The gradient is given by:\n', G)
cat('\n Hessian is given by: \n', H)
cat('The parameters are given by: \n', B)
}
mv_reg(y, x)
mv_reg = function(y2, x2){
sig2 = sd(y2)
T = length(x2)
beta1 = 1
beta2 = 0.2
B = rbind(beta1, beta2)
g1 = 1/(T*sig2) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -1/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
tol = 1/1e4
l = 0.1
while (tol < max(G)){
beta1 = B[1]
beta2 = B[2]
L = 1/2*log(2/pi) - 1/2*log(sig2) - 1/(2*sig2*T)*sum( (y2 - beta1 - beta2*x2)^2)
g1 = 1/(T*sig2) *sum(y2 - beta1 - beta2*x2)
h1 = -1/(sig2)
g2 = 1/(T*sig2) * sum(y2*x2 - beta1*x2 - beta2*x2^2)
h2 = -1/(T*sig2) * sum(x2^2)
G = rbind(g1, g2)
H = matrix(c(h1, 0, 0, h2), nrow = 2, ncol = 2)
B = B - l*solve(H)%*%G
cat('G:', G, 'L:', L, '\n')
}
cat('\n')
cat('The gradient is given by:\n', G)
cat('\n Hessian is given by: \n', H)
cat('\n The parameters are given by: \n', B)
}
mv_reg(y, x)
reg2
lm(y~x)
cat('\n The parameters are given by: \n', B)
mv_reg(y, x)
lm(y~x)
mv_reg(y, x)
mv_reg(y, x)
curve(dchisq(x, 12))
curve(dchisq(x, 1))
curve(dchisq(x, 1), ylim=c(0,5))
qchisq(0.3, 1)
pchisq(0.4, 12)
pnorm(0)
qnorm(0.5)
curve(dchisq(x, 1), ylim=c(0,5))
curve(dchisq(x, 1), ylim=c(0,5), color='blue')
curve(dchisq(x, 1), ylim=c(0,5), col='blue')
curve(dchisq(x, 1), ylim=c(0,5), col='blue', lty=2)
curve(dchisq(x, 1), ylim=c(0,5), col='blue', lty=3)
curve(dchisq(x, 1), ylim=c(0,5), col='blue', lty=4)
curve(dchisq(x, 1), ylim=c(0,5), col='blue', lty=6)
curve(dchisq(x, 1), ylim=c(0,5), col='blue', lty=7)
curve(dchisq(x, 1), ylim=c(0,5), col='blue', lty=2)
curve(dchisq(x, 1), ylim=c(0,5), col='red', lty=2)
for(i in 2:8){
curve(dchisq(x, i), ylim=c(0,5), col='red', lty=i, add=T )
}
curve(dchisq(x, 1), ylim=c(0,5), col='red', lty=2)
for(i in 2:4){
curve(dchisq(x, i), col='red', lty=i, add=T )
}
curve(dchisq(x, 2), ylim=c(0,5), col='red')
curve(dchisq(x, 1), ylim=c(0,5), col='red', lty=2)
curve(dchisq(x, 2), ylim=c(0,5), col='red', add=T)
curve(dchisq(x, 1), ylim=c(0,5), col='red', lty=2)
curve(dchisq(x, 2), ylim=c(0,5), col='red', add=T)
curve(dchisq(x, 2), ylim=c(0,5), col='red', add=T)
curve(dchisq(x, 1), ylim=c(0,5), col='red', lty=2)
curve(dchisq(x, 2), ylim=c(0,5), col='red')
curve(dchisq(x, 2), ylim=c(0,5), col='red')
curve(dchisq(x, 12), col='red')
curve(dchisq(x, 2), col='red')
curve(dchisq(x, 1), col='red', lty=2)
curve(dchisq(x, 2), col='red')
curve(dchisq(x, 2), lty=3)
curve(dchisq(x, 1), col='red', lty=2)
curve(dchisq(x, 2), lty=3)
curve(dchisq(x, 3), lty=3, add=T)
curve(dchisq(x, 4), lty=3, add=T)
curve(dchisq(x, 5), lty=3, add=T)
curve(dchisq(x, 6), lty=3, add=T)
for(i in 1:4){
hist(rchisq(1000, i), breaks=25, col='lightgreen')
}
for(i in 1:100){
hist(rchisq(1000, i), breaks=25, col='lightgreen', density = T)
}
windows()
for(i in 1:100){
hist(rchisq(1000, i), breaks=25, col='lightgreen', density = T)
}
windows()
for(i in 1:100){
hist(rchisq(1000, i), breaks=25, col='lightgreen', density = F)
}
windows()
for(i in 1:100){
hist(rchisq(1000, i), breaks=25, col='lightgreen', probability= T)
}
windows()
for(i in 1:100){
hist(rchisq(1000, i), breaks=25, col='lightgreen', probability= T)
}
curve(dchisq(x, 10, 1))
curve(dchisq(x, 10, 1, log = T))
curve(dchisq(x, 10, 0, log = T))
curve(dchisq(x, 10, 0, log = T))
curve(dchisq(x, 11, 0, log = T), add=T)
curve(dchisq(x, 11, 1, log = T), add=T)
curve(dchisq(x, 10, 1, log = T))
curve(dchisq(x, 11, 1, log = T), add=T)
curve(dchisq(x, 10, 1), ylim=c(0, 0.5))
curve(dchisq(x, 11, 1, log = T), add=T)
curve(dchisq(x, 10, 1), ylim=c(0, 0.5))
curve(dchisq(x, 11, 1, log = T), add=T)
curve(dchisq(x, 10, 1), ylim=c(0, 0.5))
curve(dchisq(x, 11, 1), add=T)
curve(dchisq(x, 10, 1), ylim=c(0, 0.5))
curve(dchisq(x, 11, 1),ylim=c(0, 0.5), add=T)
curve(dchisq(x, 11, 1),ylim=c(0, 0.5), add=T)
curve(dchisq(x, 10, 1), ylim=c(0, 0.5))
curve(dchisq(x, 11, 1),ylim=c(0, 0.5), add=T)
curve(dchisq(x, 1, 1), ylim=c(0, 0.5))
curve(dchisq(x, 2, 1),ylim=c(0, 0.5), add=T)
