theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 30000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 300000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 300000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 300000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 300000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 300000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 300000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 500000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 500000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 500000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 500000
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
(t_max - t_min)/n *s
t_max = 300
t_min = 0
n = 500000
s = 0
nn = 100
I = c()
for (j in 1:nn) {
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
I[j] = (t_max - t_min)/n *s
}
mean(I)
sd(I)
hist(I)
for (j in 1:nn) {
s = 0
for (i in 1:n) {
theta = runif(1, min=t_min, max=t_max)
f_ = f(2, 1/3)
s = s + f_
}
I[j] = (t_max - t_min)/n *s
}
mean(I)
sd(I)
hist(I, breaks = 30, col='lightgreen')
hist(I, breaks = 30, col='lightgreen', main='Histogram of Integral values')
m = 1e+5
y = numeric(m)
phi = numeric(m)
curve(rbeta(x, 2, 2))
curve(pbeta(x, 2, 2))
curve(pbeta(x, 2, 20))
curve(pbeta(x, 2, 2))
curve(pbeta(x, 20, 2))
curve(pbeta(x, 10, 2))
curve(pbeta(x, 10, 20))
m = 1e+5
y = numeric(m)
phi = numeric(m)
for(i in 1:m){
phi[i] = rbeta(1, 2, 2)
y[i] = rbinom(1, size = 10, phi[i])
}
phi = rbeta(1, 2, 2)
y = rbinom(1, size = 10, phi)
hist(phi)
hist(y)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 1, 0.3)
rbinom(1, size = 1, 0.3)
rbinom(1, size = 1, 0.3)
rbinom(1, size = 2, 0.3)
rbinom(1, size = 2, 0.3)
rbinom(1, size = 2, 0.3)
rbinom(1, size = 2, 0.3)
rbinom(1, size = 2, 0.3)
rbinom(1, size = 2, 0.3)
rbinom(1, size = 2, 0.3)
rbinom(1, size = 2, 0.3)
rbinom(1, size = 2, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbinom(1, size = 10, 0.3)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
rbeta(1, 2, 2)
table(y)
phi = rbeta(1, 2, 2)
y = rbinom(1, size = 10, phi)
table(y)
hist(y)
y = rbinom(1, size = 10, phi)
table(y)
phi = rbeta(m, 2, 2)
y = rbinom(m, size = 10, phi)
table(y)
table(y)/m
plot(table(y)/m)
plot(table(y)/m, main='Beta Binomial distribution of y')
plot(table(y)/m, main='Beta Binomial distribution of y', ylabel='Probability')
plot(table(y)/m, main='Beta Binomial distribution of y', ylab='Probability')
plot(table(y)/m, main='Beta Binomial distribution of y')
plot(table(y)/m, main='Beta Binomial distribution of y', ylab='Probability')
plot(table(y)/m, main='Beta Binomial distribution of y', ylab='Probability')
setwd("D:/Git projects/college_works/Bayesian Simulation")
set.seed(34)
n = 100
x = numeric(n)
for (i in 2:n) {
x[i] = rnorm(1, mean=x[i-1], sd=1.0)
}
plot.ts(x)
n = 1000
x = numeric(n)
for (i in 2:n) {
x[i] = rnorm(1, mean=x[i-1], sd=1.0)
}
plot.ts(x)
Q = matrix(c(0.0, 0.5, 0.0, 0.0, 0.5,
0.5, 0.0, 0.5, 0.0, 0.0,
0.0, 0.5, 0.0, 0.5, 0.0,
0.0, 0.0, 0.5, 0.0, 0.5,
0.5, 0.0, 0.0, 0.5, 0.0),
nrow=5, byrow=TRUE)
Q%*%Q
Q%*%Q[1,3]
(Q%*%Q)[1,3]
Q5 = Q %*% Q %*% Q %*% Q %*% Q # h=5 steps in the future
round(Q5, 3)
for(i in 1:100){
Q100 = Q100%*%Q
}
Q100 = Q
for(i in 1:100){
Q100 = Q100%*%Q
}
round(Q100, 5)
round(Q100,3)
Q30 = Q
for(i in 1:30){
Q30 = Q30%*%Q
}
round(Q30, 3)
Q30
Q20 = Q
for(i in 1:20){
Q20 = Q20%*%Q
}
round(Q32, 3)
round(Q20, 3)
hist(x)
set.seed(34)
n = 100000
x = numeric(n)
for (i in 2:n) {
x[i] = rnorm(1, mean=x[i-1], sd=1.0)
}
plot.ts(x)
hist(x)
n = 100000
x = numeric(n)
phi = -0.6
for (i in 2:n) {
x[i] = rnorm(1, mean=x[i-1]*phi, sd=1.0)
}
plot.ts(x)
hist(x)
hist(x, col='lightgreen')
curve(rnorm(x), add=T)
hist(x, col='lightgreen', density = t)
hist(x, col='lightgreen', density = T)
hist(x, density = T, col='lightgreen')
hist(x, density = T, col='green')
hist(x, density = T, col='blue')
hist(x, density = T)
hist(x, freq = F)
hist(x, freq = F, col = 'lightgreen')
curve(rnorm(x), add=T)
hist(x, freq = F, col = 'lightgreen')
curve(dnorm(x), add=T)
hist(x, freq = F, col = 'lightgreen', ylim = c(0,0.5))
curve(dnorm(x), add=T)
legend('best', legend = 'Theoretical Stationary Dist.')
hist(x, freq = F, col = 'lightgreen', ylim = c(0,0.5))
curve(dnorm(x), add=T)
legend('best', legend = 'Theoretical Stationary Dist.')
legend('right', legend = 'Theoretical Stationary Dist.')
legend('topright', legend = 'Theoretical Stationary Dist.')
hist(x, freq = F, col = 'lightgreen', ylim = c(0,0.5))
curve(dnorm(x), add=T)
legend('topright', legend = 'Theoretical Stationary Dist.')
legend('topright', legend = 'Theoretical Stationary Dist.', col='red')
legend('topright', legend = 'Theoretical Stationary Dist.', col='red')
hist(x, freq = F, col = 'lightgreen', ylim = c(0,0.5))
curve(dnorm(x), add=T)
legend('topright', legend = 'Theoretical Stationary Dist.', col='red')
hist(x, freq = F, col = 'lightgreen', ylim = c(0,0.5))
curve(dnorm(x), add=T)
legend('topright', legend = 'Theoretical Stationary Dist.', col='red', lty=1, bty="n")
legend('bottonright', legend = 'Theoretical Stationary Dist.', col='red', lty=1, bty="n")
legend('bottomright', legend = 'Theoretical Stationary Dist.', col='red', lty=1, bty="n")
hist(x, freq = F, col = 'lightgreen', ylim = c(0,0.5))
curve(dnorm(x), add=T)
legend('right', legend = 'Theoretical Stationary Dist.', col='red', lty=1, bty="n")
hist(x, freq = F, col = 'lightgreen', ylim = c(0,0.5))
curve(dnorm(x), add=T)
legend('right', legend = 'Theoretical\n Stationary Dist.', col='red', lty=1, bty="n")
legend(-0.5, 0.5, legend = 'Theoretical\n Stationary Dist.', col='red', lty=1, bty="n")
hist(x, freq = F, col = 'lightgreen', ylim = c(0,0.5))
curve(dnorm(x), add=T)
legend(-0.5, 0.5, legend = 'Theoretical\n Stationary Dist.', col='red', lty=1, bty="n")
legend(-5, 0.5, legend = 'Theoretical\n Stationary Dist.', col='red', lty=1, bty="n")
hist(x, freq = F, col = 'lightgreen', ylim = c(0,0.5))
curve(dnorm(x), add=T)
legend(-5, 0.5, legend = 'Theoretical\n Stationary Dist.', col='red', lty=1, bty="n")
hist(x, freq = F, col = 'lightgreen', ylim = c(0,0.5))
curve(dnorm(x), add=T)
legend(-6, 0.6, legend = 'Theoretical\n Stationary Dist.', col='red', lty=1, bty="n")
hist(x, freq = F, col = 'lightgreen', ylim = c(0,0.5))
curve(dnorm(x), add=T)
legend(6, 0.6, legend = 'Theoretical\n Stationary Dist.', col='red', lty=1, bty="n")
hist(x, freq = F, col = 'lightgreen', ylim = c(0,0.5))
curve(dnorm(x), add=T)
legend(6, 0.6, legend = 'Theoretical\n Stationary Dist.', col='red', lty=1, bty="n")
hist(x, freq = F, col = 'lightgreen', ylim = c(0,0.5))
curve(dnorm(x), add=T)
legend(5, 0.6, legend = 'Theoretical\n Stationary Dist.', col='red', lty=1, bty="n")
hist(x, freq = F, col = 'lightgreen', ylim = c(0,0.5))
curve(dnorm(x), add=T)
legend(4.5, 0.6, legend = 'Theoretical\n Stationary Dist.', col='red', lty=1, bty="n")
hist(x, freq = F, col = 'lightgreen', ylim = c(0,0.5))
curve(dnorm(x), add=T)
legend(4, 0.6, legend = 'Theoretical\n Stationary Dist.', col='red', lty=1, bty="n")
hist(x, freq = F, col = 'lightgreen', ylim = c(0,0.5))
curve(dnorm(x), add=T)
legend(3, 0.6, legend = 'Theoretical\n Stationary Dist.', col='red', lty=1, bty="n")
hist(x, freq = F, col = 'lightgreen', ylim = c(0,0.5))
curve(dnorm(x), add=T)
legend(2.5, 0.6, legend = 'Theoretical\n Stationary Dist.', col='red', lty=1, bty="n")
hist(x, freq = F, col = 'lightgreen', ylim = c(0,0.5))
curve(dnorm(x), add=T)
legend(2, 0.6, legend = 'Theoretical\n Stationary Dist.', col='red', lty=1, bty="n")
summary(x)
sd(x)
