scale_colour_manual(name ='x', values =twoClassColor) +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
ggplot(data = fits2, aes(x=cb, y=vix, color =x)) +
geom_tile(data = cbind(Grid2, x = b), aes(fill = x)) +
ggtitle("Decision region") +
scale_colour_manual(name ='x', values =twoClassColor) +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
clas4 = naiveBayes(x=find3[-1], y = as.factor(find3$x))
fits2 = mutate(find3, prev4 = predict(clas4, newdata = find3[-1]) )
nbp <- 250;
PredA <- seq(min(find3$cb), max(find3$cb), length = nbp)
PredB <- seq(min(find3$vix), max(find3$vix), length = nbp)
Grid2 <- expand.grid(cb = PredA, vix = PredB)
b = predict(clas4,Grid2)
regions2 = ggplot(data = fits2, aes(x=cb, y=vix, color =x)) +
geom_tile(data = cbind(Grid2, x = b), aes(fill = x)) +
ggtitle("Decision region") +
scale_colour_manual(name ='x', values =twoClassColor) +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
show(regions2)
bound2 = ggplot(data = fits2, aes(x=cb, y=vix, color =as.factor(x) )) +
geom_contour(data = cbind(Grid2, x = b), aes(z = as.numeric (x) ),
color='red', breaks = c(1.5)) +
geom_point(size = 4, alpha = .5)  +
ggtitle("Decision boundaries") +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
bound2
ggplot(data = fits2, aes(x=cb, y=vix, color =as.factor(x) )) +
geom_contour(data = cbind(Grid2, x = b), aes(z = as.numeric (x) ),
color='black', breaks = c(1.5),binwidth = 2) +
geom_point(size = 4, alpha = .5)  +
ggtitle("Decision boundaries") +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
ggplot(data = fits2, aes(x=cb, y=vix, color =as.factor(x) )) +
geom_contour(data = cbind(Grid2, x = b), aes(z = as.numeric (x) ),
color='black', breaks = c(1.5),binwidth = 5) +
geom_point(size = 4, alpha = .5)  +
ggtitle("Decision boundaries") +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
bound2 = ggplot(data = fits2, aes(x=cb, y=vix, color =as.factor(x) )) +
geom_contour(data = cbind(Grid2, x = b), aes(z = as.numeric (x) ),
color='black', breaks = c(1.5)) +
geom_point(size = 4, alpha = .5)  +
ggtitle("Decision boundaries") +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
bound2
clas5 = naiveBayes(x=teste[-3], y = as.factor(teste$sex))
fits3 = mutate(teste, prev4 = predict(clas5, newdata = teste[-3]) )
nbp <- 100;
PredA <- seq(min(teste$height), max(teste$height), length = nbp)
PredB <- seq(min(teste$weight), max(teste$weight), length = nbp)
Grid3 <- expand.grid(height = PredA, weight = PredB)
c = predict(clas5,Grid3)
regions3 = ggplot(data = fits3, aes(x=height, y=weight, color=sex ) ) +
geom_tile(data = cbind(Grid3, sex = c), aes(fill = sex)) +
ggtitle("Decision region") +
scale_colour_manual(name ='sex', values =twoClassColor) +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
show(regions3)
bound3 = ggplot(data = fits3, aes(x=height, y=weight, color=as.factor(sex) ) ) +
geom_contour(data = cbind(Grid2, sex = b), aes(z = as.numeric (sex) ),
color='red', breaks = c(1.5)) +
geom_point(size = 4, alpha = .5)  +
ggtitle("Decision boundaries") +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
bound3
clas5 = naiveBayes(x=teste[-3], y = as.factor(teste$sex))
fits3 = mutate(teste, prev4 = predict(clas5, newdata = teste[-3]) )
nbp <- 100;
PredA <- seq(min(teste$height), max(teste$height), length = nbp)
PredB <- seq(min(teste$weight), max(teste$weight), length = nbp)
Grid3 <- expand.grid(height = PredA, weight = PredB)
c = predict(clas5,Grid3)
regions3 = ggplot(data = fits3, aes(x=height, y=weight, color=sex ) ) +
geom_tile(data = cbind(Grid3, sex = c), aes(fill = sex)) +
ggtitle("Decision region") +
scale_colour_manual(name ='sex', values =twoClassColor) +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
show(regions3)
ggplot(data = fits3, aes(x=height, y=weight, color=as.factor(sex) ) ) +
geom_contour(data = cbind(Grid2, sex = b), aes(z = as.numeric (sex) ),
color='red', breaks = c(1.5)) +
geom_point(size = 4, alpha = .5)  +
ggtitle("Decision boundaries") +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
ggplot(data = fits3, aes(x=height, y=weight, color=as.factor(sex) ) ) +
geom_contour(data = cbind(Grid2, sex = b), aes(z = as.numeric (sex) ),
color='red', breaks = c(1.5)) +
geom_point(size = 4, alpha = .5)  +
ggtitle("Decision boundaries")
ggplot(data = fits3, aes(x=height, y=weight, color=as.factor(sex) ) ) +
geom_contour(data = cbind(Grid2, sex = b), aes(z = as.numeric (sex) ),
color='red', breaks = c(1.5)) +
geom_point(size = 4, alpha = .5)  +
ggtitle("Decision boundaries")
ggplot(data = fits3, aes(x=height, y=weight, color=as.factor(sex) ) ) +
geom_contour(data = cbind(Grid2, sex = b), aes(z = as.numeric (sex) ),
color='red', breaks = c(1.5))
ggplot(data = fits3, aes(x=height, y=weight, color=as.factor(sex) ) )
ggplot(data = fits3, aes(x=height, y=weight, color=as.factor(sex) ) ) +
geom_contour(data = cbind(Grid3, sex = b), aes(z = as.numeric (sex) ),
color='red', breaks = c(1.5)) +
geom_point(size = 4, alpha = .5)  +
ggtitle("Decision boundaries") +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
c = predict(clas5,Grid3)
ggplot(data = fits3, aes(x=height, y=weight, color=as.factor(sex) ) ) +
geom_contour(data = cbind(Grid3, sex = c), aes(z = as.numeric (sex) ),
color='red', breaks = c(1.5)) +
geom_point(size = 4, alpha = .5)  +
ggtitle("Decision boundaries") +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
View(census)
tst1 = census[28001:30162, ]
census = census[1:28000, ]
census = ovun.sample(as.factor(income)~., data=census, method="both", p=0.5,
subset=options("subset")$subset,
na.action=options("na.action")$na.action, seed=1)
tr1 = census
tr1 = as.data.frame(census$data)
View(tr1)
tr1 = data.frame(census$data)
census = data.frame(census$data)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "D:/Git projects/college_works/ML_1")
cl4 =  naivef('income', tr1, cd=1)
cl4 =  naivef('income', tr1, cd=1)
head(predf('income', tr1, tst1, cl4, cclas=0, cd=1))
View(tr1)
cl4 =  naivef('income', tr1, cd=1)
head(predf('income', tr1, tst1, cl4, cclas=0, cd=1))
ndp = predf('income', tr1, tst1, cl4, cclas=1, cd=1)
head(ndp)
acurracy1 = (sum((ndp==tst1[,'income'])*1)/length(tst1[,1])) *100
acurracy1
census = readRDS('census.rds')
keep2 = c('education', 'occupation', 'income')
census = census[ ,keep2]
tst1 = census[28001:30162, ]
census = census[1:28000, ]
census = ovun.sample(as.factor(income)~., data=census, method="both", p=0.5,
subset=options("subset")$subset,
na.action=options("na.action")$na.action, seed=1)
tr1 = data.frame(census$data)
View(tr1)
cl4 =  naivef('income', tr1, cd=1)
census = data.frame(census$data)
View(census)
clas6 = naiveBayes(x=census[-3], y = as.factor(census$income))
fits3 = mutate(census, prev4 = predict(clas6, newdata = census[-3]) )
nbp <- 250;
PredA <- seq(min(census$education), max(census$occupation), length = nbp)
PredB <- seq(min(census$occupation), max(census$occupation), length = nbp)
Grid3 <- expand.grid(education = PredA, occupation = PredB)
PredA <- seq(min(census$education), max(census$occupation), length = nbp)
census$education = factor(census$education, levels = c(' 10th', ' 11th', ' 12th', ' 1st-4th', ' 5th-6th', ' 7th-8th', ' 9th', ' Assoc-acdm', ' Assoc-voc', ' Bachelors', ' Doctorate', ' HS-grad', ' Masters', ' Preschool', ' Prof-school', ' Some-college'), labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))
census$sex = factor(census$sex, levels = unique(base$sex), labels = c(1, 0))
census$occupation = factor(census$occupation, levels = c(' Adm-clerical', ' Armed-Forces', ' Craft-repair', ' Exec-managerial', ' Farming-fishing', ' Handlers-cleaners', ' Machine-op-inspct', ' Other-service', ' Priv-house-serv', ' Prof-specialty', ' Protective-serv', ' Sales', ' Tech-support', ' Transport-moving'), labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))
clas6 = naiveBayes(x=census[-3], y = as.factor(census$income))
fits3 = mutate(census, prev4 = predict(clas6, newdata = census[-3]) )
nbp <- 250;
PredA <- seq(min(census$education), max(census$occupation), length = nbp)
PredB <- seq(min(census$occupation), max(census$occupation), length = nbp)
Grid3 <- expand.grid(education = PredA, occupation = PredB)
census = as.numeric(census)
census = as.numeric(census$education)
census = readRDS('census.rds')
keep2 = c('education', 'occupation', 'income')
census = census[ ,keep2]
census = readRDS('census.rds')
setwd("D:/Git projects/college_works/ML_1")
census = readRDS('census.rds')
keep2 = c('education', 'occupation', 'income')
census = census[ ,keep2]
tst1 = census[28001:30162, ]
census = census[1:28000, ]
census = ovun.sample(as.factor(income)~., data=census, method="both", p=0.5,
subset=options("subset")$subset,
na.action=options("na.action")$na.action, seed=1)
#census = data.frame(census$data)
tr1 = data.frame(census$data)
census = data.frame(census$data)
census$education = factor(census$education, levels = c(' 10th', ' 11th', ' 12th', ' 1st-4th', ' 5th-6th', ' 7th-8th', ' 9th', ' Assoc-acdm', ' Assoc-voc', ' Bachelors', ' Doctorate', ' HS-grad', ' Masters', ' Preschool', ' Prof-school', ' Some-college'), labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))
census$sex = factor(census$sex, levels = unique(base$sex), labels = c(1, 0))
census$occupation = factor(census$occupation, levels = c(' Adm-clerical', ' Armed-Forces', ' Craft-repair', ' Exec-managerial', ' Farming-fishing', ' Handlers-cleaners', ' Machine-op-inspct', ' Other-service', ' Priv-house-serv', ' Prof-specialty', ' Protective-serv', ' Sales', ' Tech-support', ' Transport-moving'), labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))
census$education = factor(census$education, levels = c(' 10th', ' 11th', ' 12th', ' 1st-4th', ' 5th-6th', ' 7th-8th', ' 9th', ' Assoc-acdm', ' Assoc-voc', ' Bachelors', ' Doctorate', ' HS-grad', ' Masters', ' Preschool', ' Prof-school', ' Some-college'), labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))
census$sex = factor(census$sex, levels = unique(base$sex), labels = c(1, 0))
census$sex = factor(census$sex, levels = unique(census$sex), labels = c(1, 0))
unique(census$sex)
View(census)
census = readRDS('census.rds')
View(census)
keep2 = c('education', 'occupation', 'income')
census = census[ ,keep2]
census = census[1:28000, ]
census = ovun.sample(as.factor(income)~., data=census, method="both", p=0.5,
subset=options("subset")$subset,
na.action=options("na.action")$na.action, seed=1)
census = data.frame(census$data)
census$education = factor(census$education, levels = c(' 10th', ' 11th', ' 12th', ' 1st-4th', ' 5th-6th', ' 7th-8th', ' 9th', ' Assoc-acdm', ' Assoc-voc', ' Bachelors', ' Doctorate', ' HS-grad', ' Masters', ' Preschool', ' Prof-school', ' Some-college'), labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))
census$sex = factor(census$sex, levels = unique(census$sex), labels = c(1, 0))
census$income = factor(census$income, levels = unique(census$income), labels = c(1, 0))
census$occupation = factor(census$occupation, levels = c(' Adm-clerical', ' Armed-Forces', ' Craft-repair', ' Exec-managerial', ' Farming-fishing', ' Handlers-cleaners', ' Machine-op-inspct', ' Other-service', ' Priv-house-serv', ' Prof-specialty', ' Protective-serv', ' Sales', ' Tech-support', ' Transport-moving'), labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))
clas6 = naiveBayes(x=census[-3], y = as.factor(census$income))
fits3 = mutate(census, prev4 = predict(clas6, newdata = census[-3]) )
summary(census)
summary(as.numeric(census))
summary(numeric(census))
(census$occupation, levels = c(' Adm-clerical', ' Armed-Forces', ' Craft-repair', ' Exec-managerial', ' Farming-fishing', ' Handlers-cleaners', ' Machine-op-inspct', ' Other-service', ' Priv-house-serv', ' Prof-specialty', ' Protective-serv', ' Sales', ' Tech-support', ' Transport-moving'), labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))
numeric(census$occupation, levels = c(' Adm-clerical', ' Armed-Forces', ' Craft-repair', ' Exec-managerial', ' Farming-fishing', ' Handlers-cleaners', ' Machine-op-inspct', ' Other-service', ' Priv-house-serv', ' Prof-specialty', ' Protective-serv', ' Sales', ' Tech-support', ' Transport-moving'), labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))
summary(numeric(census))
summary(as.numeric(census))
as.numeric(census)
summary(as.integer(census))
as.numeric(unlist(census))
kk =as.numeric(unlist(census))
kk =as.numeric(list(census))
rm(kk)
lapply(census, as.numeric)
kk = lapply(census, as.numeric)
View(kk)
as.data.frame(kk)
kk = as.data.frame(kk)
View(kk)
summary(kk)
census = as.data.frame(kk)
PredA <- seq(min(census$education), max(census$occupation), length = nbp)
PredB <- seq(min(census$occupation), max(census$occupation), length = nbp)
Grid3 <- expand.grid(education = PredA, occupation = PredB)
nbp <- 250;
c = predict(clas6, Grid4)
Grid4 <- expand.grid(education = PredA, occupation = PredB)
c = predict(clas6, Grid4)
clas6 = naiveBayes(x=census[-3], y = as.factor(census$income))
fits3 = mutate(census, prev4 = predict(clas6, newdata = census[-3]) )
d = predict(clas6, Grid4)
fits4 = mutate(census, prev4 = predict(clas6, newdata = census[-3]) )
View(fits4)
ggplot(data = fits4, aes(x=education, y=occupation, color=income ) ) +
geom_tile(data = cbind(Grid4, income = 4), aes(fill = income)) +
ggtitle("Decision region") +
scale_colour_manual(name ='income', values =twoClassColor) +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
ggplot(data = fits4, aes(x=education, y=occupation, color=income ) ) +
geom_tile(data = cbind(Grid4, income = d), aes(fill = income)) +
ggtitle("Decision region") +
scale_colour_manual(name ='income', values =twoClassColor) +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
ggplot(data = fits4, aes(x=education, y=occupation, color=income ) ) +
geom_contour(data = cbind(Grid4, income = d), aes(z = as.numeric (income) ),
color='black', breaks = c(1.5)) +
geom_point(size = 4, alpha = .5)  +
ggtitle("Decision boundaries") +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
bound4 = ggplot(data = fits4, aes(x=education, y=occupation, color= as.factor(income) ) ) +
geom_contour(data = cbind(Grid4, income = d), aes(z = as.numeric (income) ),
color='black', breaks = c(1.5)) +
geom_point(size = 4, alpha = .5)  +
ggtitle("Decision boundaries") +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
bound4
nbp <- 500;
PredA <- seq(min(census$education), max(census$occupation), length = nbp)
PredB <- seq(min(census$occupation), max(census$occupation), length = nbp)
Grid4 <- expand.grid(education = PredA, occupation = PredB)
d = predict(clas6, Grid4)
bound4 = ggplot(data = fits4, aes(x=education, y=occupation, color= as.factor(income) ) ) +
geom_contour(data = cbind(Grid4, income = d), aes(z = as.numeric (income) ),
color='black', breaks = c(1.5)) +
geom_point(size = 4, alpha = .5)  +
ggtitle("Decision boundaries") +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
bound4
source('~/.active-rstudio-document', echo=TRUE)
View(df)
clas6 = naiveBayes(x=df[-3], y = as.factor(df$risco))
clas7 = naiveBayes(x=df[-3], y = as.factor(df$risco))
fits5 = mutate(cdf, prev5 = predict(clas7, newdata = df[-3]) )
fits5 = mutate(df, prev5 = predict(clas7, newdata = df[-3]) )
df$historia = factor(df$historia, levels = unique(df$historia), labels = c(0, 1, 2))
df$divida = factor(df$divida, levels = unique(df$divida), labels = c(0, 1))
df$risco = factor(df$risco, levels = unique(df$risco), labels = c(0, 1, 2))
tt = lapply(df, as.numeric)
df = as.data.frame(tt)
clas7 = naiveBayes(x=df[-3], y = as.factor(df$risco))
fits5 = mutate(df, prev5 = predict(clas7, newdata = df[-3]) )
nbp <- 500;
PredA <- seq(min(df$historia), max(df$historia), length = nbp)
PredB <- seq(min(df$divida), max(df$divida), length = nbp)
Grid4 <- expand.grid(historia = PredA, divida = PredB)
Grid5 <- expand.grid(historia = PredA, divida = PredB)
d = predict(clas7, Grid5)
e = predict(clas7, Grid5)
regions5 = ggplot(data = fits5, aes(x=historia, y=divida, color=risco ) ) +
geom_tile(data = cbind(Grid5, risco = e), aes(fill = risco)) +
ggtitle("Decision region") +
scale_colour_manual(name ='risco', values =twoClassColor) +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
regions5
threeClassColor <- brewer.pal(3,'Set1')[1:3]
names(twoClassColor) <- c('Class1','Class2', 'Class3')
threeClassColor <- brewer.pal(3,'Set1')[1:3]
names(twoClassColor) <- c('Class1','Class2', 'Class3')
length(threeClassColor)
names(twoClassColor) <- c('Class1','Class2', 'Class3')
names(threeClassColor) <- c('Class1','Class2', 'Class3')
regions5 = ggplot(data = fits5, aes(x=historia, y=divida, color=risco ) ) +
geom_tile(data = cbind(Grid5, risco = e), aes(fill = risco)) +
ggtitle("Decision region") +
scale_colour_manual(name ='risco', values =threeClassColor) +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
regions5
table(df$risco)
bound4 = ggplot(data = fits5, aes(x=historia, y=divida, color=risco ) ) +
geom_contour(data = cbind(Grid5, income = e), aes(z = as.numeric (risco) ),
color='black', breaks = c(1.5)) +
geom_point(size = 4, alpha = .5)  +
ggtitle("Decision boundaries") +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
bound4
View(fits5)
nbp <- 500;
PredA <- seq(min(df$historia), max(df$historia), length = nbp)
PredB <- seq(min(df$divida), max(df$divida), length = nbp)
Grid5 <- expand.grid(historia = PredA, divida = PredB)
bound5 = ggplot(data = fits5, aes(x=historia, y=divida, color=risco ) ) +
geom_contour(data = cbind(Grid5, risco = e), aes(z = as.numeric (risco) ),
color='black', breaks = c(1.5)) +
geom_point(size = 4, alpha = .5)  +
ggtitle("Decision boundaries") +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
bound5
bound5 = ggplot(data = fits5, aes(x=historia, y=divida, color=as.factor(risco) ) ) +
geom_contour(data = cbind(Grid5, risco = e), aes(z = as.numeric (risco) ),
color='black', breaks = c(1.5)) +
geom_point(size = 4, alpha = .5)  +
ggtitle("Decision boundaries") +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
bound5
bound5 = ggplot(data = fits5, aes(x=divida, y=historia, color=as.factor(risco) ) ) +
geom_contour(data = cbind(Grid5, risco = e), aes(z = as.numeric (risco) ),
color='black', breaks = c(1.5)) +
geom_point(size = 4, alpha = .5)  +
ggtitle("Decision boundaries") +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
bound5
unique(df$risco)
ggplot(data = fits5, aes(x=historia, y=divida, color=risco ) ) +
geom_tile(data = cbind(Grid5, risco = e), aes(fill = risco)) +
ggtitle("Decision region") +
scale_colour_manual(name ='risco', values =threeClassColor) +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
threeClassColor <- brewer.pal(3,'Set2')[1:3]
names(threeClassColor) <- c('Class1','Class2', 'Class3')
ggplot(data = fits5, aes(x=historia, y=divida, color=risco ) ) +
geom_tile(data = cbind(Grid5, risco = e), aes(fill = risco)) +
ggtitle("Decision region") +
scale_colour_manual(name ='risco', values =threeClassColor) +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
threeClassColor <- brewer.pal(3,'Set2')[3:6]
names(threeClassColor) <- c('Class1','Class2', 'Class3')
regions5 = ggplot(data = fits5, aes(x=historia, y=divida, color=risco ) ) +
geom_tile(data = cbind(Grid5, risco = e), aes(fill = risco)) +
ggtitle("Decision region") +
scale_colour_manual(name ='risco', values =threeClassColor) +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
regions5
ggplot(data = fits5, aes(x=historia, y=divida, color=risco ) ) + geom_point()
ggplot(data = fits5, aes(x=historia, y=divida, color=risco ) ) +
geom_tile(data = cbind(Grid5, risco = e), aes(fill = risco))
threeClassColor <- brewer.pal(3,'Set2')[2:5]
names(threeClassColor) <- c('Class1','Class2', 'Class3')
regions5 = ggplot(data = fits5, aes(x=historia, y=divida, color=risco ) ) +
geom_tile(data = cbind(Grid5, risco = e), aes(fill = risco)) +
ggtitle("Decision region") +
scale_colour_manual(name ='risco', values =threeClassColor) +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
regions5
threeClassColor <- brewer.pal(3,'Set2')[2:4]
names(threeClassColor) <- c('Class1','Class2', 'Class3')
regions5 = ggplot(data = fits5, aes(x=historia, y=divida, color=risco ) ) +
geom_tile(data = cbind(Grid5, risco = e), aes(fill = risco)) +
ggtitle("Decision region") +
scale_colour_manual(name ='risco', values =threeClassColor) +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
regions5
threeClassColor <- brewer.pal(3,'Set2')[3:5]
names(threeClassColor) <- c('Class1','Class2', 'Class3')
threeClassColor <- brewer.pal(3,'Set2')[2:4]
threeClassColor <- brewer.pal(3,'Set2')[1:3]
names(threeClassColor) <- c('Class1','Class2', 'Class3')
ggplot(data = fits5, aes(x=historia, y=divida, color=risco ) ) +
geom_tile(data = cbind(Grid5, risco = e), aes(fill = risco)) +
ggtitle("Decision region") +
scale_colour_manual(name ='risco', values =threeClassColor) +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
threeClassColor <- brewer.pal(4,'Set2')[1:3]
names(threeClassColor) <- c('Class1','Class2', 'Class3')
ggplot(data = fits5, aes(x=historia, y=divida, color=risco ) ) +
geom_tile(data = cbind(Grid5, risco = e), aes(fill = risco)) +
ggtitle("Decision region") +
scale_colour_manual(name ='risco', values =threeClassColor) +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
ggplot(data = fits5, aes(x=historia, y=divida, color=risco ) ) +
geom_tile(data = cbind(Grid5, risco = e), aes(fill = risco)) +
ggtitle("Decision region") +
#scale_colour_manual(name ='risco', values=threeClassColor) +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
ggplot(data = fits5, aes(x=historia, y=divida, color=risco ) ) +
geom_tile(data = cbind(Grid5, risco = e), aes(fill = risco)) +
ggtitle("Decision region") +
#scale_colour_manual(name ='risco', values=threeClassColor) +
theme(legend.text = element_text(size = 24),
axis.title.x = element_text(colour = 'black', size=24),
axis.title.y = element_text(colour = 'black', size=24),
plot.title = element_text(hjust = 0.5, size = 25))
