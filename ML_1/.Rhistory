pm[i] = t[i]*P[1,1,i]*P[2,1,i]
}
pm = pm/sum(pm)
maxi = which.max(pm)
cnewd = rownames(pm[maxi])
if(cclas==0){
return(pm)
}else{
return(cnewd)
}
}
o = p('sex', teste, cc, 5.75, 180, cclas = 0)
o
o = p('sex', teste, cc, 5.75, 180, cclas = 1)
o
p = function(k, df, cl, b, c, cclas=0){
t = prop.table(table(df[,k]))
ta = length(t)
nm = rownames(t)
P = array(0, dim = c(2, 1, ta))
print('Conditional Probabilities')
pm = matrix(0, nrow = ta, ncol = 1)
rownames(pm) = nm
for(i in 1:ta){
a =dnorm(b, mean=cl[1, 1 ,i] , sd=cl[1, 2 ,i])
d = dnorm(c, mean=cl[2, 1 ,i] , sd=cl[2, 2 ,i])
m = matrix(c(a,d))
P[, ,i] = m
cat(nm[i], '\n')
print(P[, ,i])
pm[i] = t[i]*P[1,1,i]*P[2,1,i]
}
pm = pm/sum(pm)
maxi = which.max(pm)
cnewd = pm[maxi]
if(cclas==0){
return(pm)
}else{
return(cnewd)
}
}
o = p('sex', teste, cc, 5.75, 180, cclas = 1)
o
p = function(k, df, cl, b, c, cclas=0){
t = prop.table(table(df[,k]))
ta = length(t)
nm = rownames(t)
P = array(0, dim = c(2, 1, ta))
print('Conditional Probabilities')
pm = matrix(0, nrow = ta, ncol = 1)
rownames(pm) = nm
for(i in 1:ta){
a =dnorm(b, mean=cl[1, 1 ,i] , sd=cl[1, 2 ,i])
d = dnorm(c, mean=cl[2, 1 ,i] , sd=cl[2, 2 ,i])
m = matrix(c(a,d))
P[, ,i] = m
cat(nm[i], '\n')
print(P[, ,i])
pm[i] = t[i]*P[1,1,i]*P[2,1,i]
}
pm = pm/sum(pm)
maxi = which.max(pm)
cnewd = max(pm)
if(cclas==0){
return(pm)
}else{
return(cnewd)
}
}
o = p('sex', teste, cc, 5.75, 180, cclas = 1)
o
p = function(k, df, cl, b, c, cclas=0){
t = prop.table(table(df[,k]))
ta = length(t)
nm = rownames(t)
P = array(0, dim = c(2, 1, ta))
print('Conditional Probabilities')
pm = matrix(0, nrow = ta, ncol = 1)
rownames(pm) = nm
for(i in 1:ta){
a =dnorm(b, mean=cl[1, 1 ,i] , sd=cl[1, 2 ,i])
d = dnorm(c, mean=cl[2, 1 ,i] , sd=cl[2, 2 ,i])
m = matrix(c(a,d))
P[, ,i] = m
cat(nm[i], '\n')
print(P[, ,i])
pm[i] = t[i]*P[1,1,i]*P[2,1,i]
}
pm = pm/sum(pm)
maxi = which.max(pm)
cnewd = matrix(0, 1, 1)
cnewd = pm[max]
if(cclas==0){
return(pm)
}else{
return(cnewd)
}
}
o = p('sex', teste, cc, 5.75, 180, cclas = 1)
o
o = p('sex', teste, cc, 5.75, 180, cclas = 0)
o
p = function(k, df, cl, b, c, cclas=0){
t = prop.table(table(df[,k]))
ta = length(t)
nm = rownames(t)
P = array(0, dim = c(2, 1, ta))
print('Conditional Probabilities')
pm = matrix(0, nrow = ta, ncol = 1)
rownames(pm) = nm
for(i in 1:ta){
a =dnorm(b, mean=cl[1, 1 ,i] , sd=cl[1, 2 ,i])
d = dnorm(c, mean=cl[2, 1 ,i] , sd=cl[2, 2 ,i])
m = matrix(c(a,d))
P[, ,i] = m
cat(nm[i], '\n')
print(P[, ,i])
pm[i] = t[i]*P[1,1,i]*P[2,1,i]
}
pm = pm/sum(pm)
maxi = which.max(pm)
cnewd = matrix(0, 1, 1)
cnewd = pm[maxi]
if(cclas==0){
return(pm)
}else{
return(cnewd)
}
}
o = p('sex', teste, cc, 5.75, 180, cclas = 0)
o
o = p('sex', teste, cc, 5.75, 180, cclas = 1)
o
g1 = c(1000)
g2 = c(5000)
g3 = c(3)
G = data.frame(g1, g2, g3)
G
which.max(G)
which.max(G)
which.min(G)
G[1]
G[3]
which.max(G)
cv = which.max(G)
cv
G[which.max(G)]
colnames( G[which.max(G)] )
p = function(k, df, cl, b, c, cclas=0){
t = prop.table(table(df[,k]))
ta = length(t)
nm = rownames(t)
P = array(0, dim = c(2, 1, ta))
print('Conditional Probabilities')
pm = matrix(0, nrow = ta, ncol = 1)
rownames(pm) = nm
for(i in 1:ta){
a =dnorm(b, mean=cl[1, 1 ,i] , sd=cl[1, 2 ,i])
d = dnorm(c, mean=cl[2, 1 ,i] , sd=cl[2, 2 ,i])
m = matrix(c(a,d))
P[, ,i] = m
cat(nm[i], '\n')
print(P[, ,i])
pm[i] = t[i]*P[1,1,i]*P[2,1,i]
}
pm = pm/sum(pm)
cnewd = colnames( pm[which.max(pm)] )
if(cclas==0){
return(pm)
}else{
return(cnewd)
}
}
o = p('sex', teste, cc, 5.75, 180, cclas = 1)
o
o = p('sex', teste, cc, 5.75, 180, cclas = 0)
o
G = matrix(c(g1, g2, g3))
colnames( G[which.max(G)] )
which.max(G)
G
rownames( G[which.max(G)] )
row.names( G[which.max(G)] )
rownames( G[which.max(G)] )
row.names(G)
rownames(G)
colnames(G)
p = function(k, df, cl, b, c, cclas=0){
t = prop.table(table(df[,k]))
ta = length(t)
nm = rownames(t)
P = array(0, dim = c(2, 1, ta))
print('Conditional Probabilities')
#pm = matrix(0, nrow = ta, ncol = 1)
pm = data.frame()
rownames(pm) = nm
for(i in 1:ta){
a =dnorm(b, mean=cl[1, 1 ,i] , sd=cl[1, 2 ,i])
d = dnorm(c, mean=cl[2, 1 ,i] , sd=cl[2, 2 ,i])
m = matrix(c(a,d))
P[, ,i] = m
cat(nm[i], '\n')
print(P[, ,i])
pm[i] = t[i]*P[1,1,i]*P[2,1,i]
}
pm = pm/sum(pm)
cnewd = colnames( pm[which.max(pm)] )
if(cclas==0){
return(pm)
}else{
return(cnewd)
}
}
o = p('sex', teste, cc, 5.75, 180, cclas = 0)
p = function(k, df, cl, b, c, cclas=0){
t = prop.table(table(df[,k]))
ta = length(t)
nm = rownames(t)
P = array(0, dim = c(2, 1, ta))
print('Conditional Probabilities')
pm = matrix(0, nrow = ta, ncol = 1)
rownames(pm) = nm
pm = data.frame(pm)
for(i in 1:ta){
a =dnorm(b, mean=cl[1, 1 ,i] , sd=cl[1, 2 ,i])
d = dnorm(c, mean=cl[2, 1 ,i] , sd=cl[2, 2 ,i])
m = matrix(c(a,d))
P[, ,i] = m
cat(nm[i], '\n')
print(P[, ,i])
pm[i] = t[i]*P[1,1,i]*P[2,1,i]
}
pm = pm/sum(pm)
cnewd = colnames( pm[which.max(pm)] )
if(cclas==0){
return(pm)
}else{
return(cnewd)
}
}
o = p('sex', teste, cc, 5.75, 180, cclas = 0)
o
o = p('sex', teste, cc, 5.75, 180, cclas = 1)
o
p = function(k, df, cl, b, c, cclas=0){
t = prop.table(table(df[,k]))
ta = length(t)
nm = rownames(t)
P = array(0, dim = c(2, 1, ta))
print('Conditional Probabilities')
pm = matrix(0, nrow = ta, ncol = 1)
rownames(pm) = nm
for(i in 1:ta){
a =dnorm(b, mean=cl[1, 1 ,i] , sd=cl[1, 2 ,i])
d = dnorm(c, mean=cl[2, 1 ,i] , sd=cl[2, 2 ,i])
m = matrix(c(a,d))
P[, ,i] = m
cat(nm[i], '\n')
print(P[, ,i])
pm[i] = t[i]*P[1,1,i]*P[2,1,i]
}
pm = pm/sum(pm)
cnewd = colnames( pm[which.max(pm)] )
if(cclas==0){
return(pm)
}else{
return(cnewd)
}
}
o = p('sex', teste, cc, 5.75, 180, cclas = 1)
o
o = p('sex', teste, cc, 5.75, 180, cclas = 0)
o
rownames( list(G[which.max(G)] )
rownames( list(G[which.max(G)] ))
rownames( list(G[which.max(G)] ))
rownames( list=c(G[which.max(G)] ))
colnames(G)
rownames(G)
G = matrix(c(g1, g2, g3))
rownames(G)
G
G = matrix(c(g1, g2, g3), colnames=c('g1', 'g2', 'g3'))
G = matrix(c(g1, g2, g3), rownames=c('g1', 'g2', 'g3'))
G
G = matrix(c(g1, g2, g3))
G
View(G)
colnames(G)= c('g1', 'g2', 'g3')
G
ROWnames(G)= c('g1', 'g2', 'g3')
rownames(G)= c('g1', 'g2', 'g3')
G
rownames( list=c(G[which.max(G)] ))
rownames(G)
rownames(max(G))
which.max(G)
aaa = which.max(G)
rownames(G[aaa])
rownames(G[aaa,])
rownames(G[1])
rowname(G[1])
rownames(G[1])
rownames(G)
rownames(G[1,1])
rownames(G)[1]
rownames(G)[aaa]
p = function(k, df, cl, b, c, cclas=0){
t = prop.table(table(df[,k]))
ta = length(t)
nm = rownames(t)
P = array(0, dim = c(2, 1, ta))
print('Conditional Probabilities')
pm = matrix(0, nrow = ta, ncol = 1)
rownames(pm) = nm
for(i in 1:ta){
a =dnorm(b, mean=cl[1, 1 ,i] , sd=cl[1, 2 ,i])
d = dnorm(c, mean=cl[2, 1 ,i] , sd=cl[2, 2 ,i])
m = matrix(c(a,d))
P[, ,i] = m
cat(nm[i], '\n')
print(P[, ,i])
pm[i] = t[i]*P[1,1,i]*P[2,1,i]
}
pm = pm/sum(pm)
cnewd = colnames(pm)[which.max(pm)]
if(cclas==0){
return(pm)
}else{
return(cnewd)
}
}
o = p('sex', teste, cc, 5.75, 180, cclas = 0)
o
o = p('sex', teste, cc, 5.75, 180, cclas = 1)
o
p = function(k, df, cl, b, c, cclas=0){
t = prop.table(table(df[,k]))
ta = length(t)
nm = rownames(t)
P = array(0, dim = c(2, 1, ta))
print('Conditional Probabilities')
pm = matrix(0, nrow = ta, ncol = 1)
rownames(pm) = nm
for(i in 1:ta){
a =dnorm(b, mean=cl[1, 1 ,i] , sd=cl[1, 2 ,i])
d = dnorm(c, mean=cl[2, 1 ,i] , sd=cl[2, 2 ,i])
m = matrix(c(a,d))
P[, ,i] = m
cat(nm[i], '\n')
print(P[, ,i])
pm[i] = t[i]*P[1,1,i]*P[2,1,i]
}
pm = pm/sum(pm)
paa = which.max(pm)
cnewd = rownames(pm)[paa]
if(cclas==0){
return(pm)
}else{
return(cnewd)
}
}
o = p('sex', teste, cc, 5.75, 180, cclas = 1)
o
prev = function(k, df, df_n, cl, b, c, cclas=1){
p_new = matrix(0, nrow = length(df_n))
for(i in 1:length(df_n[,1])){
p_new[i] = p('sex', teste, cc, 5.75, 180, cclas = 1)
}
}
prev = function(k, df, df_n, cl, b, c, cclas=1){
p_new = matrix(0, nrow = length(df_n))
for(i in 1:length(df_n[,1])){
p_new[i] = p(k, df, cl, df_n[i, 1], df_n[i, 2], cclas = 1)
}
}
height = c(5.4, 5.8, 6)
weight = c(170, 183, 188)
dfn = data.frame(height, weight)
prev('sex', teste, dfn, cc, 5.75, 180, cclas = 1)
prev('sex', teste, dfn, cc, cclas = 1)
prev('sex', teste, dfn, cc, cclas = 0)
prev = function(k, df, df_n, cl, b, c, cclas=1){
p_new = matrix(0, nrow = length(df_n))
for(i in 1:length(df_n[,1])){
p_new[i] = p(k, df, cl, df_n[i, 1], df_n[i, 2], cclas = 1)
}
return(p_new)
}
prev('sex', teste, dfn, cc, cclas = 0)
p(('sex', teste, dfn, cc, 5.4, 170, cclas = 1))
p('sex', teste, dfn, cc, 5.4, 170, cclas = 1)
p('sex', teste, cc, 5.4, 170, cclas = 1)
o=p('sex', teste, cc, 5.4, 170, cclas = 1)
o
oo = prev('sex', teste, dfn, cc, cclas = 0)
oo
p = function(k, df, cl, b, c, cclas=0){
t = prop.table(table(df[,k]))
ta = length(t)
nm = rownames(t)
P = array(0, dim = c(2, 1, ta))
#print('Conditional Probabilities')
pm = matrix(0, nrow = ta, ncol = 1)
rownames(pm) = nm
for(i in 1:ta){
a =dnorm(b, mean=cl[1, 1 ,i] , sd=cl[1, 2 ,i])
d = dnorm(c, mean=cl[2, 1 ,i] , sd=cl[2, 2 ,i])
m = matrix(c(a,d))
P[, ,i] = m
#cat(nm[i], '\n')
#print(P[, ,i])
pm[i] = t[i]*P[1,1,i]*P[2,1,i]
}
pm = pm/sum(pm)
paa = which.max(pm)
cnewd = rownames(pm)[paa]
if(cclas==0){
return(pm)
}else{
return(cnewd)
}
}
o = p('sex', teste, cc, 5.4, 170, cclas = 1)
o
o = p('sex', teste, cc, 5.4, 170, cclas = 0)
o
oo = prev('sex', teste, dfn, cc, cclas = 0)
oo
o = p('sex', teste, cc, 5.8, 183, cclas = 0)
o
oo = prev('sex', teste, dfn, cc, cclas = 0)
oo
o = p('sex', teste, cc, 5.8, 183, cclas = 0)
o
prev = function(k, df, df_n, cl, b, c, cclas=0){
p_new = matrix(0, nrow = length(df_n))
for(i in 1:length(df_n[,1])){
p_new[i] = p(k, df, cl, df_n[i, 1], df_n[i, 2], cclas = 0)
}
return(p_new)
}
oo = prev('sex', teste, dfn, cc, cclas = 0)
o = p('sex', teste, cc, 5.8, 183, cclas = 0)
o
o = p('sex', teste, cc, 5.8, 183, cclas = 1)
o
prev = function(k, df, df_n, cl, b, c, cclas=1){
t = prop.table(table(df[,k]))
ta = length(t)
if(cclas==1){
j = 1
}else{
j=ta
}
p_new = matrix(0, nrow = length(df_n), ncol=j)
for(i in 1:length(df_n[,1])){
p_new[i, j] = p(k, df, cl, df_n[i, 1], df_n[i, 2], cclas=1)
}
return(p_new)
}
o = p('sex', teste, cc, 5.8, 183, cclas = 1)
oo = prev('sex', teste, dfn, cc, cclas = 0)
prev = function(k, df, df_n, cl, b, c, cclas=1){
t = prop.table(table(df[,k]))
ta = length(t)
if(cclas==1){
j = 1
}else{
j=ta
}
p_new = matrix(0, nrow = length(df_n), ncol=j)
for(i in 1:length(df_n[,1])){
p_new[i, j] = t( p(k, df, cl, df_n[i, 1], df_n[i, 2], cclas=1) )
}
return(p_new)
}
oo = prev('sex', teste, dfn, cc, cclas = 0)
prev = function(k, df, df_n, cl, b, c, cclas=1){
t = prop.table(table(df[,k]))
ta = length(t)
if(cclas==1){
j = 1
}else{
j=ta
}
p_new = matrix(0, nrow = length(df_n), ncol=j)
for(i in 1:length(df_n[,1])){
for (k in 1:j) {
p_new[i, k] = p(k, df, cl, df_n[i, 1], df_n[i, 2], cclas=1)
}
}
return(p_new)
}
oo = prev('sex', teste, dfn, cc, cclas = 0)
oo = prev('sex', teste, dfn, cc, cclas = 1)
prev = function(k, df, df_n, cl, b, c, cclas=1){
p_new = matrix(0, nrow = length(df_n))
for(i in 1:length(df_n[,1])){
p_new[i] = p(k, df, cl, df_n[i, 1], df_n[i, 2], cclas=1)
}
return(p_new)
}
oo = prev('sex', teste, dfn, cc, cclas = 1)
oo
height = c(5.4, 5.8, 6, 5)
weight = c(170, 183, 188, 188)
dfn = data.frame(height, weight)
oo = prev('sex', teste, dfn, cc, cclas = 1)
oo
o = p('sex', teste, cc, 5, 188, cclas = 1)
o
