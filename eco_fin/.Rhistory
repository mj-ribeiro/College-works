dotchart(covid$casos,
labels = covid$UF,
cex = 1.5,
col = 'steelblue4',
pch = 16,
xlab = 'Casos de covid')
covid = covid[order(covid$casos), ]
dotchart(covid$casos,
labels = covid$UF,
cex = 1.5,
col = 'steelblue4',
pch = 16,
xlab = 'Casos de covid')
pct = round(100*covid$casos/sum(covid$casos), 2)
pct
library(readxl)
#install.packages('readxl')
covid = read_excel(file.choose())
head(covid)
dotchart(covid$casos,
labels = covid$UF,
cex = 1.5,
col = 'steelblue4',
pch = 16,
xlab = 'Casos de covid')
dotchart(covid$casos,
labels = covid$UF,
cex = 1.5,
col = 'steelblue4',
pch = 16,
xlab = 'Casos de covid')
covid = covid[order(covid$casos), ]
dotchart(covid$casos,
labels = covid$UF,
cex = 1.5,
col = 'steelblue4',
pch = 16,
xlab = 'Casos de covid')
pct = 100*covid$casos/sum(covid$casos)
pct
pct = round(pct, 2)
pct
pie(pct,
labels = UF,
radius = 1,
main = 'Percentual de covid em cada Estado'
)
covid = covid[order(covid$casos), ]
dotchart(covid$casos,
labels = covid$UF,
cex = 1.5,
col = 'steelblue4',
pch = 16,
xlab = 'Casos de covid')
pct = 100*covid$casos/sum(covid$casos)
pct
pct
pie(pct,
labels = covid$UF,
radius = 1,
main = 'percentual de covid por Estado'
)
pie(pct,
labels =  paste(covid$UF,sep= " ", pct, "%" ),
radius = 1,
main = 'percentual de covid por Estado'
)
pct
pct = round(pct, 2)
pie(pct,
labels =  paste(covid$UF,sep= " ", pct, "%" ),
radius = 1,
main = 'percentual de covid por Estado'
)
library(readxl)
#install.packages('readxl')
covid = read_excel(file.choose())
head(covid)
covid = covid[order(covid$casos), ]
dotchart(covid$casos,
labels = covid$UF,
cex = 1.5,
col = 'steelblue4',
pch = 16,
xlab = 'Casos de covid')
covid = covid[order(covid$casos), ]
dotchart(covid$casos,
labels = covid$UF,
cex = 1.5,
col = 'steelblue4',
pch = 16,
xlab = 'Casos de covid')
pct = 100*covid$casos/sum(covid$casos)
pct
pct = round(pct, 2)
pct
pie(pct,
labels = covid$UF,
radius = 1,
main = 'Percentual de covid em cada Estado')
paste(10, sep="", '%')
paste(10, sep=" ", '%')
pie(pct,
labels = paste(covid$UF, sep = '', pct, '%')
radius = 1,
main = 'Percentual de covid em cada Estado')
pie(pct,
labels = paste(covid$UF, sep ="", pct, '%')
radius = 1,
main = 'Percentual de covid em cada Estado')
pie(pct,
labels = paste(covid$UF, sep ="", pct, '%'),
radius = 1,
main = 'Percentual de covid em cada Estado')
pie(pct,
labels = paste(covid$UF, sep =" ", pct, '%'),
radius = 1,
main = 'Percentual de covid em cada Estado')
pct = 100*covid$casos/sum(covid$casos)
pct = round(pct, 2)
pie(pct,
labels = covid$UF,
radius = 1,
main = 'Percentual de covid em cada Estado')
paste(10, "%", sep="")
paste(10, "%", sep=" ")
paste(pct, "%", sep=" ")
pie(pct,
labels = paste(covid$UF, pct, '%', sep=" "),
radius = 1,
main = 'Percentual de covid em cada Estado')
boxplot(covid$casos,
col='lightgreen',
main = 'Casos de Covid')
boxplot(covid$casos,
col = 'lightgreen',
main = 'Casos de Covid no Brasil')
c(1, 3, 1, 0, 5, 2, 2000 )
choco = c(1, 3, 1, 0, 5, 2, 2000 )
boxplot(choco)
mean(choco)
choco = c(1, 3, 1, 0, 5, 2 )
mean(choco)
setwd("D:/Git projects/college_works/eco_fin")
library(latex2exp)
library(ggplot2)
library(reshape2)
# data
df = readRDS('df.rds')
df$av = as.numeric(df$av)
data1 = row.names(df)
data1 = as.Date(data1, format = '%Y-%m-%d')
df$data1 = data1
library(readxl)
writexl::write_xlsx(df, 'dfGGTOP.xlsx')
df4 = df[, c('crise2', 'rexc', 'data1')]
df4$rexc = as.numeric(df4$rexc)
t = function(x){
return (ifelse(x<1.06, x-0.08, x )-1.05)
}
df4$rexc = t(df4$rexc)
plot(t(df4$rexc), type='l' )
abline(h=0)
df4 <- melt(data = df4, id.vars = "data1")
# plot, using the aesthetics argument 'colour'
g4 = ggplot(data = df4, aes(x = data1, y = value, colour = variable)) +
geom_line(size=0.8) +
scale_x_date(date_labels="%Y",date_breaks  ="1 year") +
scale_y_continuous(labels=function(x)
format(x, big.mark = ".",
decimal.mark = ",",
scientific = FALSE)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=20),
axis.text.y = element_text(size=20),
axis.title.x = element_text(colour = 'black', size=21),
axis.title.y = element_text(colour = 'black', size=21),
legend.title=element_blank(),
legend.text = element_text(colour="black", size = 21),
legend.position="bottom" ) +
xlab('Anos') +
ylab('')
g5 = g4  + scale_colour_discrete(name="Variáveis",
breaks=c("crise2", "rexc"),
labels= unname( TeX(c("D_t", "AV"))) )
windows()
g5
g5
View(df4)
df4 = df[, c('crise2', 'rexc', 'data1')]
df4$rexc = as.numeric(df4$rexc)
t = function(x){
return (ifelse(x<1.06, x-0.08, x )-1.05)
}
df4$rexc = t(df4$rexc)
df4
View(df4)
df4["2020-01-01"]
df4["2020-01-01",]
df4["2015-01-01", ]
df4["2015-01-01", ]= -1*df4["2015-01-01", ]
df4["2015-01-01", ]= -1*df4["2015-01-01", ]
df4[100, ]= -1*df4["2015-01-01", ]
df4[100, ]
df4[150, ]
df4[170, ]
df4[180, ]
str(df4)
format(as.Date(df4$data1, format="%d/%m/%Y"),"%Y")
date = function(x){
format(as.Date(x, format="%d/%m/%Y"),"%Y")
}
date(df4$data1)
date(df4$data1)==2015
date(df4$data1)==2014
df4[date(df4$data1)==2014, rexc]
df4[date(df4$data1)==2014, df4$rexc]
df4[date(df4$data1)==2014, ]
df4[date(df4$data1)==2014,'rexc' ]
df4[date(df4$data1)==2014,'rexc' ]
mean(df4$rexc)
df4[date(df4$data1)==2015,'rexc' ]
df4[date(df4$data1)==2015,'rexc' ] = ifelse(
df4[date(df4$data1)==2015,'rexc' ] < 0,
-1*df4[date(df4$data1)==2015,'rexc' ],
df4[date(df4$data1)==2015,'rexc' ])
df4[date(df4$data1)==2015,'rexc' ]
g4 = ggplot(data = df4, aes(x = data1, y = value, colour = variable)) +
geom_line(size=0.8) +
scale_x_date(date_labels="%Y",date_breaks  ="1 year") +
scale_y_continuous(labels=function(x)
format(x, big.mark = ".",
decimal.mark = ",",
scientific = FALSE)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=20),
axis.text.y = element_text(size=20),
axis.title.x = element_text(colour = 'black', size=21),
axis.title.y = element_text(colour = 'black', size=21),
legend.title=element_blank(),
legend.text = element_text(colour="black", size = 21),
legend.position="bottom" ) +
xlab('Anos') +
ylab('')
g5 = g4  + scale_colour_discrete(name="Variáveis",
breaks=c("crise2", "rexc"),
labels= unname( TeX(c("D_t", "AV"))) )
windows()
g5
df4 <- melt(data = df4, id.vars = "data1")
# plot, using the aesthetics argument 'colour'
g4 = ggplot(data = df4, aes(x = data1, y = value, colour = variable)) +
geom_line(size=0.8) +
scale_x_date(date_labels="%Y",date_breaks  ="1 year") +
scale_y_continuous(labels=function(x)
format(x, big.mark = ".",
decimal.mark = ",",
scientific = FALSE)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=20),
axis.text.y = element_text(size=20),
axis.title.x = element_text(colour = 'black', size=21),
axis.title.y = element_text(colour = 'black', size=21),
legend.title=element_blank(),
legend.text = element_text(colour="black", size = 21),
legend.position="bottom" ) +
xlab('Anos') +
ylab('')
g5 = g4  + scale_colour_discrete(name="Variáveis",
breaks=c("crise2", "rexc"),
labels= unname( TeX(c("D_t", "AV"))) )
windows()
g5
ggsave(g5, file="fig2.eps", device="eps", width = 12, height = 8)
df$rexc = as.numeric(df$rexc)
# AV
d1 = ggplot(data=df, aes(x = data1, y = rexc-1)) +
geom_line()  +
scale_x_date(date_labels="%Y",date_breaks  ="2 year") +
scale_y_continuous(labels=function(x) format(x, big.mark = ".", decimal.mark = ",", scientific = FALSE)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=18),
axis.text.y = element_text(size=18),
axis.title.x = element_text(colour = 'black', size=18),
axis.title.y = element_text(colour = 'black', size=18),
legend.title=element_blank(),
legend.text = element_text(colour="black", size=18)) +
xlab('Anos') +
ylab('AV')
d1
df4 = df[, c('crise2', 'rexc', 'data1')]
df4$rexc = as.numeric(df4$rexc)
df4$rexc = t(df4$rexc)
df4[date(df4$data1)==2015,'rexc' ] = ifelse(
df4[date(df4$data1)==2015,'rexc' ] < 0,
-1*df4[date(df4$data1)==2015,'rexc' ],
df4[date(df4$data1)==2015,'rexc' ])
df$rexc = df4$rexc
# AV
d1 = ggplot(data=df, aes(x = data1, y = rexc-1)) +
geom_line()  +
scale_x_date(date_labels="%Y",date_breaks  ="2 year") +
scale_y_continuous(labels=function(x) format(x, big.mark = ".", decimal.mark = ",", scientific = FALSE)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=18),
axis.text.y = element_text(size=18),
axis.title.x = element_text(colour = 'black', size=18),
axis.title.y = element_text(colour = 'black', size=18),
legend.title=element_blank(),
legend.text = element_text(colour="black", size=18)) +
xlab('Anos') +
ylab('AV')
d1
df = readRDS('df.rds')
df$av = as.numeric(df$av)
data1 = row.names(df)
data1 = as.Date(data1, format = '%Y-%m-%d')
df$data1 = data1
setwd("D:/Git projects/college_works/eco_fin")
library(latex2exp)
library(ggplot2)
library(reshape2)
# data
df = readRDS('df.rds')
df$av = as.numeric(df$av)
data1 = row.names(df)
setwd("D:/Git projects/college_works/eco_fin")
library(latex2exp)
library(ggplot2)
library(reshape2)
# data
df = readRDS('df.rds')
df$av = as.numeric(df$av)
data1 = row.names(df)
data1 = as.Date(data1, format = '%Y-%m-%d')
df$data1 = data1
df4 = df[, c('crise2', 'rexc', 'data1')]
df4$rexc = as.numeric(df4$rexc)
df4$rexc = t(df4$rexc)
df4[date(df4$data1)==2015,'rexc' ] = ifelse(
df4[date(df4$data1)==2015,'rexc' ] < 0,
-1*df4[date(df4$data1)==2015,'rexc' ],
df4[date(df4$data1)==2015,'rexc' ])
plot(t(df4$rexc), type='l' )
abline(h=0)
t(df4$rexc)
df4 = df[, c('crise2', 'rexc', 'data1')]
df4$rexc = as.numeric(df4$rexc)
df4$rexc
df4$rexc = t(df4$rexc)
df4$rexc
df4[date(df4$data1)==2015,'rexc' ] = ifelse(
df4[date(df4$data1)==2015,'rexc' ] < 0,
-1*df4[date(df4$data1)==2015,'rexc' ],
df4[date(df4$data1)==2015,'rexc' ])
df4$rexc
df$rexc = df4$rexc
plot(t(df4$rexc), type='l' )
abline(h=0)
plot(df4$rexc, type='l' )
abline(h=0)
# AV
d1 = ggplot(data=df, aes(x = data1, y = rexc-1)) +
geom_line()  +
scale_x_date(date_labels="%Y",date_breaks  ="2 year") +
scale_y_continuous(labels=function(x) format(x, big.mark = ".", decimal.mark = ",", scientific = FALSE)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=18),
axis.text.y = element_text(size=18),
axis.title.x = element_text(colour = 'black', size=18),
axis.title.y = element_text(colour = 'black', size=18),
legend.title=element_blank(),
legend.text = element_text(colour="black", size=18)) +
xlab('Anos') +
ylab('AV')
d1
d1 = ggplot(data=df, aes(x = data1, y = rexc)) +
geom_line()  +
scale_x_date(date_labels="%Y",date_breaks  ="2 year") +
scale_y_continuous(labels=function(x) format(x, big.mark = ".", decimal.mark = ",", scientific = FALSE)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=18),
axis.text.y = element_text(size=18),
axis.title.x = element_text(colour = 'black', size=18),
axis.title.y = element_text(colour = 'black', size=18),
legend.title=element_blank(),
legend.text = element_text(colour="black", size=18)) +
xlab('Anos') +
ylab('AV')
d1
# CB
d2 = ggplot(data=df, aes(x = data1, y = cb)) +
geom_line()  +
scale_x_date(date_labels="%Y",date_breaks  ="2 year") +
scale_y_continuous(breaks = seq(60, 213, by = 20)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=18),
axis.text.y = element_text(size=18),
axis.title.x = element_text(colour = 'black', size=18),
axis.title.y = element_text(colour = 'black', size=18),
legend.title=element_blank(),
legend.text = element_text(colour="black", size=18)) +
xlab('Anos') +
ylab('INPC')
# Cdi
d3 = ggplot(data=df, aes(x = data1, y = cdi)) +
geom_line()  +
scale_x_date(date_labels="%Y",date_breaks  ="2 year") +
scale_y_continuous(breaks = seq(0.2, 3, by = 0.3),
labels=function(x) format(x, big.mark = ".", decimal.mark = ",", scientific = FALSE)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=18),
axis.text.y = element_text(size=18),
axis.title.x = element_text(colour = 'black', size=18),
axis.title.y = element_text(colour = 'black', size=18),
legend.title=element_blank(),
legend.text = element_text(colour="black", size=18)) +
xlab('Anos') +
ylab('CDI (mensal)')
d3
# EMBI
df$embi = as.numeric(df$embi)
d4 = ggplot(data=df, aes(x = data1, y = embi)) +
geom_line()  +
scale_x_date(date_labels="%Y",date_breaks  ="2 year") +
scale_y_continuous(breaks = seq(100, 2300, by = 300)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=18),
axis.text.y = element_text(size=18),
axis.title.x = element_text(colour = 'black', size=18),
axis.title.y = element_text(colour = 'black', size=18),
legend.title=element_blank(),
legend.text = element_text(colour="black", size = 18)) +
xlab('Anos') +
ylab('EMBI')
d4
# OIL
d5 = ggplot(data=df, aes(x = data1, y = oil)) +
geom_line()  +
scale_x_date(date_labels="%Y",date_breaks  ="2 year") +
scale_y_continuous(breaks = seq(10, 130, by = 20)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=18),
axis.text.y = element_text(size=18),
axis.title.x = element_text(colour = 'black', size=18),
axis.title.y = element_text(colour = 'black', size=18),
legend.title=element_blank(),
legend.text = element_text(colour="black", size=18)) +
xlab('Anos') +
ylab('Petróleo')
# GOLD
d6 = ggplot(data=df, aes(x = data1, y = gold)) +
geom_line()  +
scale_x_date(date_labels="%Y",date_breaks  ="2 year") +
scale_y_continuous(breaks = seq(250, 1850, by = 250)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=18),
axis.text.y = element_text(size=18),
axis.title.x = element_text(colour = 'black', size=18),
axis.title.y = element_text(colour = 'black', size=18),
legend.title=element_blank(),
legend.text = element_text(colour="black", size=18)) +
xlab('Anos') +
ylab('Ouro')
library("ggpubr")
G = ggarrange(d5, d6, d1, d4, d3, d2, nrow=3, ncol=2)
G
ggsave(G, file="fig3.eps", device="eps", height=14, width=12)
log(s/(1-s))
s =0.255
e = 0.7238
log(s/(1-s))
log(s/(1-s)) + log(e/(1-e))
pi
sqrt(3)/pi*(log(s/(1-s)) + log(e/(1-e)) )
sqrt(3)/3.14*(log(s/(1-s)) + log(e/(1-e)) )
s =0.7108
e = 0.5254
sqrt(3)/3.14*(log(s/(1-s)) + log(e/(1-e)) )
sqrt(3)/3.14*(log10(s/(1-s)) + log10(e/(1-e)) )
sqrt(3)/3.14*(log(s/(1-s)) + log(e/(1-e)) )
s =0.7033
e = 0.5623
sqrt(3)/3.14*(log(s/(1-s)) + log(e/(1-e)) )
(sqrt(3)/3.14)*(log(s/(1-s)) + log(e/(1-e)) )
s =0.703345
e = 0.562312
(sqrt(3)/3.14)*(log(s/(1-s)) + log(e/(1-e)) )
s =0.7033450101
e = 0.562312192
(sqrt(3)/3.14)*(log(s/(1-s)) + log(e/(1-e)) )
s =0.70335
e = 0.5624
(sqrt(3)/3.14)*(log(s/(1-s)) + log(e/(1-e)) )
s =0.9283
e = 0.9852
(sqrt(3)/3.14)*(log(s/(1-s)) + log(e/(1-e)) )
s =0.7108
e = 0.5254
(sqrt(3)/3.14)*(log(s/(1-s)) + log(e/(1-e)) )
s =0.7033
e = 0.5623
(sqrt(3)/3.14)*(log(s/(1-s)) + log(e/(1-e)) )
s =0.94
e = 0.9877
(sqrt(3)/3.14)*(log(s/(1-s)) + log(e/(1-e)) )
s =0.255
e = 0.7238
(sqrt(3)/3.14)*(log(s/(1-s)) + log(e/(1-e)) )
s =0.8025
e = 0.8311
(sqrt(3)/3.14)*(log(s/(1-s)) + log(e/(1-e)) )
