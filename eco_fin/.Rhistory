col='lightgreen',
main='Histograma')
curve(dt(x, 11), add=T)
hist(rt(1000, 11), probability = T,
ylim = c(0, 0.45),
col='lightgreen',
main='Histograma')
curve(dt(x, 11), add=T)
hist(rt(1000, 11), probability = T,
ylim = c(0, 0.45),
col='lightgreen',
main='Histograma')
curve(dt(x, 11), add=T)
hist(rt(1000, 11), probability = T,
ylim = c(0, 0.45),
col='lightgreen',
main='Histograma')
curve(dt(x, 11), add=T)
hist(rt(1000, 11), probability = T,
ylim = c(0, 0.45),
col='lightgreen',
main='Histograma')
curve(dt(x, 11), add=T)
hist(rt(1000, 11), probability = T,
ylim = c(0, 0.45),
col='lightgreen',
main='Histograma')
curve(dt(x, 11), add=T)
hist(rt(1000, 11), probability = T,
ylim = c(0, 0.45),
col='lightgreen',
main='Histograma')
curve(dt(x, 11), add=T)
hist(rt(1000, 11), probability = T,
ylim = c(0, 0.45),
col='lightgreen',
main='Histograma')
curve(dt(x, 11), add=T)
hist(rt(1000, 11), probability = T,
ylim = c(0, 0.45),
col='lightgreen',
main='Histograma')
curve(dt(x, 11), add=T)
hist(rt(1000, 11), probability = T,
ylim = c(0, 0.45),
col='lightgreen',
main='Histograma')
curve(dt(x, 11), add=T)
hist(rt(1000, 11), probability = T,
ylim = c(0, 0.45),
col='lightgreen',
main='Histograma')
curve(dt(x, 11), add=T)
hist(rt(1000, 11), probability = T,
ylim = c(0, 0.45),
col='lightgreen',
main='Histograma')
curve(dt(x, 11), add=T)
hist(rt(10000, 11), probability = T,
ylim = c(0, 0.45),
col='lightgreen',
main='Histograma')
curve(dt(x, 11), add=T)
hist(rt(10000, 11), probability = T,
ylim = c(0, 0.45),
col='lightgreen',
main='Histograma')
curve(dt(x, 11), add=T)
hist(rt(10000, 11), probability = T,
ylim = c(0, 0.45),
col='lightgreen',
main='Histograma')
curve(dt(x, 11), add=T)
hist(rt(10000, 11), probability = T,
ylim = c(0, 0.45),
col='lightgreen',
main='Histograma')
curve(dt(x, 11), add=T)
hist(rt(10000, 11), probability = T,
ylim = c(0, 0.45),
col='lightgreen',
main='Histograma')
curve(dt(x, 11), add=T)
hist(rt(10000, 11), probability = T,
ylim = c(0, 0.45),
col='lightgreen',
main='Histograma')
curve(dt(x, 11), add=T)
hist(rt(10000, 11), probability = T,
ylim = c(0, 0.45),
breaks=20,
col='lightgreen',
main='Histograma')
curve(dt(x, 11), add=T)
hist(rt(10000, 1), probability = T,
ylim = c(0, 0.45),
breaks=20,
col='lightgreen',
main='Histograma')
hist(rt(10000, 2), probability = T,
ylim = c(0, 0.45),
breaks=20,
col='lightgreen',
main='Histograma')
hist(rt(10000, 3), probability = T,
ylim = c(0, 0.45),
breaks=20,
col='lightgreen',
main='Histograma')
hist(rt(10000, 3), probability = T,
ylim = c(0, 0.45),
breaks=200,
col='lightgreen',
main='Histograma')
exp(0.0294)
exp(0.0293)
exp(0.0289)
setwd("D:/Git projects/college_works/eco_fin")
# functions
metrics = function(cm){
acurácia = (cm[["table"]][1,1] + cm[["table"]][2,2])/sum(cm[["table"]])
sensibilidade = cm[["table"]][1,1] / ( cm[["table"]][1,1] + cm[["table"]][2,1] )
especificidade = cm[["table"]][2,2] /( cm[["table"]][2,2] + cm[["table"]][1,2] )
G = sqrt(sensibilidade*especificidade)
LP = sensibilidade/(1 - especificidade)
LR = (1 - sensibilidade)/(especificidade)
DP = sqrt(pi)/3 * ( log(sensibilidade/(1 - sensibilidade) ) + log( especificidade/(1 - especificidade) )  )
gamma = sensibilidade - (1 - especificidade)
BA = (1/2) * (sensibilidade + especificidade)
métricas = data.frame(acurácia, cpc, epc, sensibilidade, especificidade, G, LP, LR, DP, gamma, BA)
}
# libraries
library('xtable')
library(caret)
library(ROSE)
library('randomForest')
library(MLeval) # to get ROC curve
#--- load variables
df1 = readRDS('df.rds')
#df$rexc = as.numeric(df$rexc)
#df$embi = as.numeric(df$embi)
keep = c('crise2', 'gold',  'embi',  'oil', 'cb', 'rexc',  'cdi')
df6 = df1[,keep]
### correlation
correl = round(cor(df6[,-c(1)]), 4 )
print(xtable(correl, type = "latex", digits=4), file = "correl.tex")
#--- Rose library
library(ROSE)
df3 = ovun.sample(as.factor(crise2)~., data=df6, method="both", p=0.50,
subset=options("subset")$subset,
na.action=options("na.action")$na.action, seed=1)
df3 = data.frame(df3$data)
prop.table(table(df3$crise2))
df3$crise2 = ifelse(df3$crise2==1, 'yes', 'no')
m2 = glm(crise2~as.numeric(df6$rexc) + gold + cdi + cb + oil + as.numeric(embi), data=df6, family = 'binomial')
summary(m2)
View(m2)
m2[["coefficients"]]
print(xtable(m2, type = "latex", digits=4), file = "reg1.tex")
summary(m2)
library(randomForest)
rf = randomForest(as.factor(crise2) ~ rexc   + oil +  cdi + cb + embi + gold, data=df6, importance=T)
rf
imp = rf$importance
imp[1, 4] = 19.5254
r_names = c('AV', 'Petróleo', 'CDI', 'INPC', 'EMBI', 'Ouro')
length(imp)
length(r_names)
row.names(imp) = r_names
imp = imp[,4]
imp = data.frame(imp)
colnames(imp) = 'variáveis'
vimp = ggplot(imp, aes(variáveis, r_names) ) +
geom_point(size=2, col='blue') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=17),
axis.text.y = element_text(size=17),
axis.title.x = element_text(colour = 'black', size=19),
axis.title.y = element_text(colour = 'black', size=19),
legend.title=element_blank(),
legend.text = element_text(colour="black", size = 17),
legend.position="bottom" ) +
xlab('Diminuição média no Gini') +
ylab('Variáveis')
vimp
setwd("D:/Git projects/college_works/eco_fin")
# functions
metrics = function(cm){
acurácia = (cm[["table"]][1,1] + cm[["table"]][2,2])/sum(cm[["table"]])
sensibilidade = cm[["table"]][1,1] / ( cm[["table"]][1,1] + cm[["table"]][2,1] )
especificidade = cm[["table"]][2,2] /( cm[["table"]][2,2] + cm[["table"]][1,2] )
G = sqrt(sensibilidade*especificidade)
LP = sensibilidade/(1 - especificidade)
LR = (1 - sensibilidade)/(especificidade)
DP = sqrt(pi)/3 * ( log(sensibilidade/(1 - sensibilidade) ) + log( especificidade/(1 - especificidade) )  )
gamma = sensibilidade - (1 - especificidade)
BA = (1/2) * (sensibilidade + especificidade)
métricas = data.frame(acurácia, cpc, epc, sensibilidade, especificidade, G, LP, LR, DP, gamma, BA)
}
# libraries
library('xtable')
library(caret)
library(ROSE)
library('randomForest')
library(MLeval) # to get ROC curve
#--- load variables
df1 = readRDS('df.rds')
#df$rexc = as.numeric(df$rexc)
#df$embi = as.numeric(df$embi)
keep = c('crise2', 'gold',  'embi',  'oil', 'cb', 'rexc',  'cdi')
df6 = df1[,keep]
### correlation
correl = round(cor(df6[,-c(1)]), 4 )
print(xtable(correl, type = "latex", digits=4), file = "correl.tex")
#--- Rose library
library(ROSE)
df3 = ovun.sample(as.factor(crise2)~., data=df6, method="both", p=0.50,
subset=options("subset")$subset,
na.action=options("na.action")$na.action, seed=1)
df3 = data.frame(df3$data)
prop.table(table(df3$crise2))
df3$crise2 = ifelse(df3$crise2==1, 'yes', 'no')
#---- Control train
control_train = trainControl(method = 'repeatedcv',
number = 10,
repeats = 10,
savePredictions = TRUE,
classProbs = TRUE,
verboseIter = TRUE)    # ten fold
###############################################################################################
#                                     Sem RAV
###############################################################################################
# LOGIT
model_d = train(as.factor(crise2) ~  gold + embi + oil + cb  + cdi, data=df3,
trControl = control_train,
method='multinom',
family='binomial',
maxit=200)
cm_lg1 = confusionMatrix(model_d)
x_d = evalm(model_d)
roc_lg1 = data.frame( x_d$roc$data[,c(2,1)] )
#---- RF
model_h =train(as.factor(crise2) ~  gold + embi + oil + cb + cdi, data=df3,
trControl = control_train, method='rf')
cm_rf1 = confusionMatrix(model_h)
####### ROC
x_h = evalm(model_h)
roc_rf1 = data.frame( x_h$roc$data[,c(2,1)] )
roc_lg1$feature="Logit"
roc_rf1$feature="FAs"
m_sav = rbind(roc_lg1, roc_rf1)
roc1 = ggplot(m_sav, aes(FPR, SENS, colour=feature)) +
geom_line(size=0.8) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=17),
axis.text.y = element_text(size=17),
axis.title.x = element_text(colour = 'black', size=17),
axis.title.y = element_text(colour = 'black', size=17),
legend.title=element_blank(),
legend.text = element_text(colour="black", size = 17),
plot.title = element_text(hjust = 0.5, size=19)) +
xlab('CPI') +
ylab('EPC') +
ggtitle('Sem AV')
roc1
model_c = train(as.factor(crise2) ~  gold + embi + oil + cb + rexc + cdi, data=df3,
trControl = control_train,
method='multinom',
family='binomial',
maxit=200)
cm_lg2 = confusionMatrix(model_c)
x_c = evalm(model_c)
roc_lg2 = data.frame( x_c$roc$data[,c(2,1)] )
#------- RF
model_g = train(as.factor(crise2) ~  gold + embi + oil + cb + rexc + cdi, data=df3,
trControl = control_train, method='rf'
)
cm_rf2 = confusionMatrix(model_g)
################ ROC
x_g = evalm(model_g)
roc_rf2 = data.frame( x_g$roc$data[,c(2,1)] )
roc_lg2$feature="Logit"
roc_rf2$feature="FAs"
m_sav2 = rbind(roc_lg2, roc_rf2)
roc2 = ggplot(m_sav2, aes(FPR, SENS, colour=feature)) +
geom_line(size=0.8) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=17),
axis.text.y = element_text(size=17),
axis.title.x = element_text(colour = 'black', size=17),
axis.title.y = element_text(colour = 'black', size=17),
legend.title=element_blank(),
legend.text = element_text(colour="black", size = 17),
plot.title = element_text(hjust = 0.5, size=19) )  +
xlab('CPI') +
ylab('EPC') +
ggtitle('Com AV')
roc2
model_m = train(as.factor(crise2) ~  rexc, data=df3,
trControl = control_train,
method='multinom',
family='binomial',
maxit=200)
cm_lg3 = confusionMatrix(model_m)
x_m = evalm(model_m)
roc_lg3 = data.frame( x_m$roc$data[,c(2,1)] )
#---------- RF
model_r = train(as.factor(crise2) ~ rexc, data=df3,
trControl = control_train,
method='rf')
cm_rf3 = confusionMatrix(model_r)
########### ROC
x_r = evalm(model_r)
roc_rf3 = data.frame( x_r$roc$data[,c(2,1)] )
roc_lg3$feature="Logit"
roc_rf3$feature="FAs"
m_sav3 = rbind(roc_lg3, roc_rf3)
roc3 = ggplot(m_sav3, aes(FPR, SENS, colour=feature)) +
geom_line(size=0.8) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=17),
axis.text.y = element_text(size=17),
axis.title.x = element_text(colour = 'black', size=17),
axis.title.y = element_text(colour = 'black', size=17),
legend.title=element_blank(),
legend.text = element_text(colour="black", size = 17),
plot.title = element_text(hjust = 0.5, size=19)) +
xlab('CPI') +
ylab('EPC') +
ggtitle('Somente AV')
roc3
library("ggpubr")
g_roc = ggarrange(roc1, roc2, roc3, nrow=1,
common.legend = T,
legend = 'bottom')
saveRDS(g_roc, 'roc_curve.rds')
g_roc
setwd("D:/Git projects/college_works/eco_fin")
library(ggplot2)
library(reshape2)
# data
df = readRDS('df.rds')
df$av = as.numeric(df$av)
data1 = row.names(df)
data1 = as.Date(data1, format = '%Y-%m-%d')
df$data1 = data1
#----- Plot CMAX  using ggplot2
var2 = quantile(df$cmts, 0.1)
windows()
g1 = ggplot(data=df, aes(y=cmts, x=data1))+geom_line(size=0.4) +
scale_x_date(date_labels="%Y",date_breaks  ="1 year") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=17),
axis.text.y = element_text(size=17),
axis.title.x = element_text(colour = 'black', size=19),
axis.title.y = element_text(colour = 'black', size=19) ) +
ylim(0.4, 1) +
xlab('Anos') +
ylab('CMAX')
g2 = g1 +
annotate(geom='text', x=as.Date('2008-10-10'), y=0.47, label= 'Crise \n de 2008', size=6) +
annotate(geom='text', x=as.Date('2020-03-10'), y=0.58, label = 'Crise do \n COVID-19', size=6) +
#annotate(geom='text', x=as.Date('2000-03-10'), y=0.6, label = 'Bolha da \n internet') +
annotate(geom='text', x=as.Date('2001-9-13'), y=0.58, label = '11 de \n setembro', size=6) +
geom_hline(yintercept =var2, size=1)
g2
g2
g2
windows()
g2
g1 = ggplot(data=df, aes(y=cmts, x=data1))+geom_line(size=0.4) +
scale_x_date(date_labels="%Y",date_breaks  ="1 year") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=19),
axis.text.y = element_text(size=17),
axis.title.x = element_text(colour = 'black', size=21),
axis.title.y = element_text(colour = 'black', size=21) ) +
ylim(0.4, 1) +
xlab('Anos') +
ylab('CMAX')
g2 = g1 +
annotate(geom='text', x=as.Date('2008-10-10'), y=0.47, label= 'Crise \n de 2008', size=8) +
annotate(geom='text', x=as.Date('2020-03-10'), y=0.58, label = 'Crise do \n COVID-19', size=8) +
#annotate(geom='text', x=as.Date('2000-03-10'), y=0.6, label = 'Bolha da \n internet') +
annotate(geom='text', x=as.Date('2001-9-13'), y=0.58, label = '11 de \n setembro', size=8) +
geom_hline(yintercept =var2, size=1)
windows()
g2
g2
g2 = g1 +
annotate(geom='text', x=as.Date('2008-10-10'), y=0.47, label= 'Crise \n de 2008', size=8) +
annotate(geom='text', x=as.Date('2020-02-10'), y=0.58, label = 'Crise do \n COVID-19', size=8) +
#annotate(geom='text', x=as.Date('2000-03-10'), y=0.6, label = 'Bolha da \n internet') +
annotate(geom='text', x=as.Date('2001-9-13'), y=0.58, label = '11 de \n setembro', size=8) +
geom_hline(yintercept =var2, size=1)
windows()
g2
g2
g2 = g1 +
annotate(geom='text', x=as.Date('2008-10-10'), y=0.47, label= 'Crise \n de 2008', size=8) +
annotate(geom='text', x=as.Date('2020-02-10'), y=0.58, label = 'Crise do \n COVID-19', size=8) +
annotate(geom='text', x=as.Date('2016-03-10'), y=0.6, label = 'Instabilidade \n política', size=8) +
annotate(geom='text', x=as.Date('2001-9-13'), y=0.58, label = '11 de \n setembro', size=8) +
geom_hline(yintercept =var2, size=1)
windows()
g2
g2 = g1 +
annotate(geom='text', x=as.Date('2008-10-10'), y=0.47, label= 'Crise \n de 2008', size=8) +
annotate(geom='text', x=as.Date('2020-02-10'), y=0.58, label = 'Crise do \n COVID-19', size=8) +
annotate(geom='text', x=as.Date('2016-03-10'), y=0.7, label = 'Instabilidade \n política', size=8) +
annotate(geom='text', x=as.Date('2001-9-13'), y=0.58, label = '11 de \n setembro', size=8) +
geom_hline(yintercept =var2, size=1)
windows()
g2
g2 = g1 +
annotate(geom='text', x=as.Date('2008-10-10'), y=0.47, label= 'Crise \n de 2008', size=8) +
annotate(geom='text', x=as.Date('2020-02-10'), y=0.58, label = 'Crise do \n COVID-19', size=8) +
annotate(geom='text', x=as.Date('2016-03-10'), y=0.68, label = 'Instabilidade \n política', size=8) +
annotate(geom='text', x=as.Date('2001-9-13'), y=0.58, label = '11 de \n setembro', size=8) +
geom_hline(yintercept =var2, size=1)
windows()
g2
g1 = ggplot(data=df, aes(y=cmts, x=data1))+geom_line(size=0.4) +
scale_x_date(date_labels="%Y",date_breaks  ="1 year") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=20),
axis.text.y = element_text(size=20),
axis.title.x = element_text(colour = 'black', size=21),
axis.title.y = element_text(colour = 'black', size=21) ) +
ylim(0.4, 1) +
xlab('Anos') +
ylab('CMAX')
g2 = g1 +
annotate(geom='text', x=as.Date('2008-10-10'), y=0.47, label= 'Crise \n de 2008', size=8) +
annotate(geom='text', x=as.Date('2020-02-10'), y=0.58, label = 'Crise do \n COVID-19', size=8) +
annotate(geom='text', x=as.Date('2016-03-10'), y=0.68, label = 'Instabilidade \n política', size=8) +
annotate(geom='text', x=as.Date('2001-9-13'), y=0.58, label = '11 de \n setembro', size=8) +
geom_hline(yintercept =var2, size=1)
windows()
g2
df4 = df[, c('crise', 'rexc', 'data1')]
df4$rexc = as.numeric(df4$rexc)
df4$rexc = df4$rexc/100
df4 <- melt(data = df4, id.vars = "data1")
# plot, using the aesthetics argument 'colour'
g4 = ggplot(data = df4, aes(x = data1, y = value, colour = variable)) +
geom_line(size=0.8) +
scale_x_date(date_labels="%Y",date_breaks  ="1 year") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=17),
axis.text.y = element_text(size=17),
axis.title.x = element_text(colour = 'black', size=19),
axis.title.y = element_text(colour = 'black', size=19),
legend.title=element_blank(),
legend.text = element_text(colour="black", size = 17),
legend.position="bottom" ) +
xlab('Anos') +
ylab('')
g5 = g4  + scale_colour_discrete(name="Variáveis",
breaks=c("crise", "rexc"),
labels=c(expression(D[t]), "AV"))
windows()
g5
df4$rexc = as.numeric(df4$rexc)
df4$rexc = df4$rexc/100
df4 <- melt(data = df4, id.vars = "data1")
# plot, using the aesthetics argument 'colour'
g4 = ggplot(data = df4, aes(x = data1, y = value, colour = variable)) +
geom_line(size=0.8) +
scale_x_date(date_labels="%Y",date_breaks  ="1 year") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=20),
axis.text.y = element_text(size=20),
axis.title.x = element_text(colour = 'black', size=21),
axis.title.y = element_text(colour = 'black', size=21),
legend.title=element_blank(),
legend.text = element_text(colour="black", size = 21),
legend.position="bottom" ) +
xlab('Anos') +
ylab('')
g5 = g4  + scale_colour_discrete(name="Variáveis",
breaks=c("crise", "rexc"),
labels=c(expression(D[t]), "AV"))
windows()
g5
df4 = df[, c('crise', 'rexc', 'data1')]
df4$rexc = as.numeric(df4$rexc)
df4$rexc = df4$rexc/100
df4 <- melt(data = df4, id.vars = "data1")
# plot, using the aesthetics argument 'colour'
g4 = ggplot(data = df4, aes(x = data1, y = value, colour = variable)) +
geom_line(size=0.8) +
scale_x_date(date_labels="%Y",date_breaks  ="1 year") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=20),
axis.text.y = element_text(size=20),
axis.title.x = element_text(colour = 'black', size=21),
axis.title.y = element_text(colour = 'black', size=21),
legend.title=element_blank(),
legend.text = element_text(colour="black", size = 21),
legend.position="bottom" ) +
xlab('Anos') +
ylab('')
g5 = g4  + scale_colour_discrete(name="Variáveis",
breaks=c("crise", "rexc"),
labels=c(expression(D[t]), "AV"))
windows()
g5
windows()
g5
exp(-0.0093)
exp(-0.0093)
