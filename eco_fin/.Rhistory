plot(rnorm(30), col='lightblue')
plot(rnorm(30,0,1), col='lightblue')
plot(rnorm(30,0,1), col='lightblue')
curve((x), add=T)
plot(rnorm(30,0,1), col='lightblue')
curve((x^2), add=T)
curve((x+2), add=T)
curve((x+2X), add=T)
curve((x+2x), add=T)
curve((x+2*x), add=T)
curve((x+2*x), add=T)
plot(rnorm(30,0,1), col='lightblue')
curve((x+2*x), add=T)
curve((2*x+2*x), add=T)
curve((0.8*x+2*x), add=T)
curve((0.01x), add=T)
curve((0.01*x), add=T)
curve((0.1*x), add=T)
plot(abs(rnorm(30,0,1)), col='lightblue')
curve((0.1*x), add=T)
plot(abs(rnorm(30,0,1)), col='gray')
curve((0.1*x), add=T)
plot(abs(rnorm(30,0,1)), col='gray', lwd=19)
curve((0.1*x), add=T)
plot(abs(rnorm(30,0,1)), col='gray', lwd=19, size=3)
plot(abs(rnorm(30,0,1)), col='gray', lwd=19)
curve((0.1*x), add=T)
plot(abs(rnorm(30,0,1)), col='gray', lwd=19)
curve((0.1*x), add=T, col='red')
curve(dnorm(x))
curve(dnorm(x), xlim=c(-1,1))
curve(dnorm(x), xlim=c(-3,3))
curve(dnorm(x), xlim=c(-4,4))
curve(dnorm(x), xlim=c(-6,6))
curve(dnorm(x), xlim=c(-8,8))
write.csv(ret, 'ret')
write.table(ret, 'ret')
write.xlsx(ret, 'ret')
library(xlsx)
write.xlsx(ret, 'ret')
write.xlsx(ret, 'c:/ret.xlsx')
write.xlsx(ret,"C:/Users/user/Documents/ret.xlsx")
spec2 = ugarchspec(variance.model=list(model="sGARCH",
garchOrder=c(1,1)),
mean.model=list(armaOrder=c(0,0), include.mean=TRUE),
distribution.model="norm")
garch3 = ugarchfit(spec = spec2, data= ret)
garch3
spec1 = ugarchspec(variance.model=list(model="fGARCH",
garchOrder=c(1,1), submodel='TGARCH'),
mean.model=list(armaOrder=c(0,0), include.mean=TRUE, archm=T),
distribution.model="norm")
garch2 = ugarchfit(spec = spec1, data= ret)
garch2
sd(ret)
library(sn)
curve(dsn(x))
curve(dsn(x), ylim=c(-8,8))
curve(dsn(x), ylim=c(0,8))
curve(dsn(x, xi = 2), ylim=c(0,8))
curve(dsn(x, xi = 2, omega = 0.2, alpha = 0.22), ylim=c(0,8))
curve(dsn(x, xi = 2, omega = 0.2, alpha = 0.22))
curve(dsn(x, xi = 22, omega = 0.2, alpha = 0.22))
curve(dsn(x, omega = 0.2, alpha = 0.22))
curve(dsn(x, omega = 3, alpha = 0.22))
curve(dsn(x, omega = 8, alpha = 0.22))
curve(dsn(x, omega = 8, alpha = 0.22), , ylim=c(0,8))
curve(dsn(x, omega = 8, alpha = 0.22), , ylim=c(-8,8))
curve(dsn(x, omega = 8, alpha = 0.22), , ylim=c(0,8))
curve(dsn(x, omega = 8, alpha = 0.22), , ylim=c(0,0.8))
curve(dsn(x, omega = 8, alpha = 0.22))
curve(dsn(x, omega = 0.11, alpha = 0.22))
curve(dsn(x, omega = 0.21, alpha = 0.22))
curve(dsn(x, omega = 0.41, alpha = 0.22))
curve(dsn(x, omega = 0.1, alpha = 0.22))
curve(dsn(x, omega = 0.1, alpha = 2))
curve(dsn(x, omega = 0.1, alpha = 10))
curve(dsn(x, omega = 0.1, alpha = 100))
curve(dsn(x, omega = 0.1, alpha = 0.011))
curve(dst(x, omega = 0.1, alpha = 0.011))
curve(dst(x, omega = 1, alpha = 0.011))
curve(dst(x, omega = 1, alpha = 0.11))
curve(dst(x, omega = 1, alpha = 11))
curve(dst(x, omega = 0.9, alpha = 11))
curve(dst(x, omega = 0.11, alpha = 11))
curve(dst(x, omega = 0.11, alpha = 0.11))
rst(x, omega = 0.11, alpha = 0.11))
rst(100, omega = 0.11, alpha = 0.11))
rst(100, omega = 0.11, alpha = 0.11)
rst(100, omega = 0.2, alpha = 0.11, xi = 2)
rst(100, omega = 0.2, alpha = 0.11, xi = 0)
rst(100, omega = 0.2, alpha = 0.11, xi = 0, nu = 2)
sin(30)
sin(30°)
sin(30)
sin(pi/6)
tan(pi/6)
curve(sin(x))
curve(sin(x), xlim = c(-3,3))
curve(sin(x), xlim = c(-30,30))
curve(sin(x), xlim = c(-10,10))
line(h=0)
aline(h=0)
abline(h=0)
curve(tan(x), xlim = c(-10,10))
curve(tan(x), xlim = c(-10,10))
abline(h=0)
curve((x), xlim = c(-10,10))
abline(v=0)
curve((x), xlim = c(0,10))
abline(v=0)
abline(v=10)
curve((x), xlim = c(0,10))
abline(v=10)
atan(1)
atan(pi)
pi/4
tan(pi/3)
tan(2*pi/3)
fd = function(x, alpha){
disf = exp(-x^alpha)
}
fd(2, 1)
fd = function(x, alpha){
disf = exp(-x^alpha)
return(disf)
}
fd(2, 1)
fd(0.2, 1)
curve(fd(x, 1))
curve(fd(x, 1), xlim = c(-10,10))
fd = function(x, alpha){
disf = exp(-x^(-alpha))
return(disf)
}
curve(fd(x, 1), xlim = c(-10,10))
curve(fd(x, 1), xlim = c(0,10))
curve(fd(x, 1), xlim = c(0,4))
install.packages('Rtolls40')
install.packages('Rtolls')
library(installr)
updateR()
updateR()
install.packages('Rtolls')
install.packages(c("fGarch", "forecast", "installr", "quantmod", "rugarch", "timeSeries", "tseries", "vars", "xlsx"))
install.packages('Rtolls')
install.packages('Rtolls40')
install.packages('rtolls40')
curve(x^0.4)
curve(x^0.4, ylim = c(0, 4))
curve(x^0.4, ylim = c(0, 1))
curve(x^0.2, ylim = c(0, 1))
curve(x^0.1, ylim = c(0, 1))
curve(x^0.01, ylim = c(0, 1))
curve(x^0.001, ylim = c(0, 1))
curve(x^0.1, ylim = c(0, 1))
curve(x^1, ylim = c(0, 1))
curve(x^0.1, ylim = c(0, 1))
curve(x^0.2, ylim = c(0, 1))
curve(x^0.4, ylim = c(0, 1), add=T)
install.packages("knitr")
install.packages("readxl")
# Defining my work diretory
setwd("C:/Users/user/Downloads/ML_work/Algorithm")
library(readxl)
teste <- read_excel("teste.xlsx")
teste$foot = NULL
df2 = teste[,'sex']
teste[,'sex']=NULL
teste$sex = df2
teste = data.frame(teste)
#--- function
naive_marcos2 = function(k, df){
df = as.data.frame(df)
#fator =  factor(df[,k])
a = prop.table(table(df[ ,k]))
ta = length(a)
nm = rownames(a)
print('Marcos Naive Bayes Classifier for Discrete Predictors')
cat('A-priori probabilities:\n')
#df2 = df[ , k]
print(a)
#df[ ,k] = NULL
#col_n = colnames(df)
#df[,k] = df2
M = array(0, dim = c(2,2, ta))
m = matrix(0, 2, 2)
for(g in 1:ta){
m1 = as.matrix(tapply(df[,1], df[,k], mean)[g])
v1 = as.matrix(tapply(df[,1], df[,k], sd)[g])
m2 = tapply(df[,2], df[,k], mean)[g]
v2 = tapply(df[,2], df[,k], sd)[g]
m = matrix(c(m1, m2, v1, v2)  )
M[, ,g] = m
cat(nm[g], '\n')
print(M[, ,g])
}
return(M)
}
cc = naive_marcos2('sex', teste)
library(readxl)
teste <- read_excel("teste.xlsx")
setwd("C:/Users/user/Downloads/ML_work/Algorithm")
getwd()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "D:/Git projects/college_works/ML_1")
library(knitr)
library(kableExtra)
#options(kableExtra.latex.load_packages = FALSE)
library(magrittr)
knitr:: kable(a, booktabs = T) %>%kable_styling(full_width = T) %>%
column_spec(1, width = "8cm")
library(magrittr)
knitr::kable(a)
library(tinytex)
remove.packages("tinytex", lib="~/R/win-library/4.0")
install.packages('tinytex')
knit_with_parameters('C:/Users/user/Downloads/ML_work/testemarkdown/MJ_Ribeiro.Rmd')
library(tinytex)
library(tinytex)
2.8*4
1,2/11.2
1.2/11.2
12*93
4*142
11*89.3
119.2*5
source('D:/Git projects/college_works/eco_fin/graphs.R')
windows()
g5
View(df)
plot(df$rexc, type='l')
df4 = df[, c('crise', 'rexc', 'data1')]
df4$av = df4$av
df4 <- melt(data = df4, id.vars = "data1")
g4 = ggplot(data = df4, aes(x = data1, y = value, colour = variable)) +
geom_line(size=1.1) +
scale_x_date(date_labels="%Y",date_breaks  ="1 year") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=17),
axis.text.y = element_text(size=17),
axis.title.x = element_text(colour = 'black', size=19),
axis.title.y = element_text(colour = 'black', size=19),
legend.title=element_blank(),
legend.text = element_text(colour="black", size = 17)) +
xlab('Anos') +
ylab('')
g5 = g4  + scale_colour_discrete(name="Variáveis",
breaks=c("crise", "av"),
labels=c(expression(D[t]), "AV"))
g5
# plot, using the aesthetics argument 'colour'
g4 = ggplot(data = df4, aes(x = data1, y = value, colour = variable)) +
geom_line(size=1.1) +
scale_x_date(date_labels="%Y",date_breaks  ="1 year") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=17),
axis.text.y = element_text(size=17),
axis.title.x = element_text(colour = 'black', size=19),
axis.title.y = element_text(colour = 'black', size=19),
legend.title=element_blank(),
legend.text = element_text(colour="black", size = 17)) +
xlab('Anos') +
ylab('')
g5 = g4  + scale_colour_discrete(name="Variáveis",
breaks=c("crise", "av"),
labels=c(expression(D[t]), "AV"))
g5
df4 = df[, c('crise', 'av', 'data1')]
df4$av = df4$av
df4 <- melt(data = df4, id.vars = "data1")
# plot, using the aesthetics argument 'colour'
g4 = ggplot(data = df4, aes(x = data1, y = value, colour = variable)) +
geom_line(size=1.1) +
scale_x_date(date_labels="%Y",date_breaks  ="1 year") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=17),
axis.text.y = element_text(size=17),
axis.title.x = element_text(colour = 'black', size=19),
axis.title.y = element_text(colour = 'black', size=19),
legend.title=element_blank(),
legend.text = element_text(colour="black", size = 17)) +
xlab('Anos') +
ylab('')
g5 = g4  + scale_colour_discrete(name="Variáveis",
breaks=c("crise", "av"),
labels=c(expression(D[t]), "AV"))
g5
df4 = df[, c('crise', 'av', 'data1')]
df4 <- melt(data = df4, id.vars = "data1")
# plot, using the aesthetics argument 'colour'
g4 = ggplot(data = df4, aes(x = data1, y = value, colour = variable)) +
geom_line(size=1.1) +
scale_x_date(date_labels="%Y",date_breaks  ="1 year") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=17),
axis.text.y = element_text(size=17),
axis.title.x = element_text(colour = 'black', size=19),
axis.title.y = element_text(colour = 'black', size=19),
legend.title=element_blank(),
legend.text = element_text(colour="black", size = 17)) +
xlab('Anos') +
ylab('')
g5 = g4  + scale_colour_discrete(name="Variáveis",
breaks=c("crise", "av"),
labels=c(expression(D[t]), "AV"))
g5
df4 = df[, c('crise', 'rexc', 'data1')]
View(df4)
df4 <- melt(data = df4, id.vars = "data1")
g4 = ggplot(data = df4, aes(x = data1, y = value, colour = variable)) +
geom_line(size=1.1) +
scale_x_date(date_labels="%Y",date_breaks  ="1 year") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=17),
axis.text.y = element_text(size=17),
axis.title.x = element_text(colour = 'black', size=19),
axis.title.y = element_text(colour = 'black', size=19),
legend.title=element_blank(),
legend.text = element_text(colour="black", size = 17)) +
xlab('Anos') +
ylab('')
g5 = g4  + scale_colour_discrete(name="Variáveis",
breaks=c("crise", "rexc"),
labels=c(expression(D[t]), "AV"))
g5
g4 = ggplot(data = df4, aes(x = data1, y = value, colour = variable)) +
geom_line(size=1.1) +
scale_x_date(date_labels="%Y",date_breaks  ="1 year") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=17),
axis.text.y = element_text(size=17),
axis.title.x = element_text(colour = 'black', size=19),
axis.title.y = element_text(colour = 'black', size=19),
legend.title=element_blank(),
legend.text = element_text(colour="black", size = 17)) +
xlab('Anos') +
ylab('')
g4
plot(df$rexc, type='l')
df4 = df[, c('crise', 'rexc', 'data1')]
df4 = df[, c('crise', 'rexc', 'data1')]
df4$rexc = df4$rexc/100
df4 <- melt(data = df4, id.vars = "data1")
# plot, using the aesthetics argument 'colour'
g4 = ggplot(data = df4, aes(x = data1, y = value, colour = variable)) +
geom_line(size=1.1) +
scale_x_date(date_labels="%Y",date_breaks  ="1 year") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=17),
axis.text.y = element_text(size=17),
axis.title.x = element_text(colour = 'black', size=19),
axis.title.y = element_text(colour = 'black', size=19),
legend.title=element_blank(),
legend.text = element_text(colour="black", size = 17)) +
xlab('Anos') +
ylab('')
g5 = g4  + scale_colour_discrete(name="Variáveis",
breaks=c("crise", "rexc"),
labels=c(expression(D[t]), "AV"))
g5
g4 = ggplot(data = df4, aes(x = data1, y = value, colour = variable)) +
geom_line(size=0.4) +
scale_x_date(date_labels="%Y",date_breaks  ="1 year") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=17),
axis.text.y = element_text(size=17),
axis.title.x = element_text(colour = 'black', size=19),
axis.title.y = element_text(colour = 'black', size=19),
legend.title=element_blank(),
legend.text = element_text(colour="black", size = 17)) +
xlab('Anos') +
ylab('')
g5 = g4  + scale_colour_discrete(name="Variáveis",
breaks=c("crise", "rexc"),
labels=c(expression(D[t]), "AV"))
g5
ggplot(data = df4, aes(x = data1, y = value, colour = variable)) +
geom_line(size=0.4)
ggplot()+
geom_line(data = df, aes(x = data1, y = rexc, colour = 'blue')) +
geom_line(data = df, aes(x = data1, y = crise, colour = 'green'))
summary(df$rexc)
df4 = df[, c('crise', 'rexc', 'data1')]
df4$rexc = df4$rexc/100
df4$rexc = as.numeric(df4$rexc)
df4 <- melt(data = df4, id.vars = "data1")
# plot, using the aesthetics argument 'colour'
g4 = ggplot(data = df4, aes(x = data1, y = value, colour = variable)) +
geom_line(size=0.4) +
scale_x_date(date_labels="%Y",date_breaks  ="1 year") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=17),
axis.text.y = element_text(size=17),
axis.title.x = element_text(colour = 'black', size=19),
axis.title.y = element_text(colour = 'black', size=19),
legend.title=element_blank(),
legend.text = element_text(colour="black", size = 17)) +
xlab('Anos') +
ylab('')
g5 = g4  + scale_colour_discrete(name="Variáveis",
breaks=c("crise", "rexc"),
labels=c(expression(D[t]), "AV"))
g5
df4 = df[, c('crise', 'rexc', 'data1')]
df4$rexc = as.numeric(df4$rexc)
df4$rexc = df4$rexc/100
df4 <- melt(data = df4, id.vars = "data1")
# plot, using the aesthetics argument 'colour'
g4 = ggplot(data = df4, aes(x = data1, y = value, colour = variable)) +
geom_line(size=0.4) +
scale_x_date(date_labels="%Y",date_breaks  ="1 year") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=17),
axis.text.y = element_text(size=17),
axis.title.x = element_text(colour = 'black', size=19),
axis.title.y = element_text(colour = 'black', size=19),
legend.title=element_blank(),
legend.text = element_text(colour="black", size = 17)) +
xlab('Anos') +
ylab('')
g5 = g4  + scale_colour_discrete(name="Variáveis",
breaks=c("crise", "rexc"),
labels=c(expression(D[t]), "AV"))
windows()
g5
g5
g5
windows()
g5
df5 = df[, c('crise2', 'rexc', 'data1')]
df5$rexc = as.numeric(df5$rexc)
df5$rexc = df5$rexc/100
df5 <- melt(data = df5, id.vars = "data1")
g6 = ggplot(data = df5, aes(x = data1, y = value, colour = variable)) +
geom_line(size=0.4) +
scale_x_date(date_labels="%Y",date_breaks  ="1 year") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=17),
axis.text.y = element_text(size=17),
axis.title.x = element_text(colour = 'black', size=19),
axis.title.y = element_text(colour = 'black', size=19),
legend.title=element_blank(),
legend.text = element_text(colour="black", size = 17)) +
xlab('Anos') +
ylab('')
g7 = g5  + scale_colour_discrete(name="Variáveis",
breaks=c("crise2", "rexc"),
labels=c(expression(D[t]), "AV"))
windows()
g7
g7 = g6  + scale_colour_discrete(name="Variáveis",
breaks=c("crise2", "rexc"),
labels=c(expression(D[t]), "AV"))
windows()
g7
df$rexc = as.numeric(df$rexc)
glm(crise2~rexc, data=df)
m = glm(crise2~rexc, data=df)
summary(m)
m1 = glm(crise2~rexc, data=df)
summary(m1)
m2 = glm(crise2~rexc + gold, data=df)
summary(m2)
m2 = glm(crise2~rexc + gold + cdi, data=df)
summary(m2)
m2 = glm(crise2~rexc + gold + cdi + cb, data=df)
summary(m2)
m2 = glm(crise2~rexc + gold + cdi + cb + oil, data=df)
summary(m2)
m2 = glm(crise2~rexc + gold + cdi + cb + oil + embi, data=df)
summary(m2)
m2 = glm(crise2~rexc + gold + cdi + cb + oil + as.numeric(embi), data=df)
summary(m2)
library(randomForest)
rf = randomForest(as.factor(crise) ~  gold  + oil +  cdi  + as.numeric(embi) + cb + rexc, data=df)
rf = randomForest(as.factor(crise2) ~  gold  + oil +  cdi  + as.numeric(embi) + cb + rexc, data=df)
rf = randomForest(as.factor(crise2) ~  gold  + oil +  cdi   + cb + rexc, data=df)
importance(rf)
varImpPlot(rf)
rf = randomForest(crise2 ~  gold  + oil +  cdi   + cb + rexc, data=df)
rf = randomForest(as.factor(crise2) ~  gold  + oil +  cdi + cb + rexc, data=df)
importance(rf)
rf = randomForest(as.factor(crise2) ~  gold  + oil +  cdi + cb + embi + rexc, data=df)
importance(rf)
varImpPlot(rf)
rf = randomForest(as.factor(crise2) ~ rexc + gold  + oil +  cdi + cb + embi , data=df)
importance(rf)
varImpPlot(rf)
rf = randomForest(as.factor(crise2) ~ rexc   + oil +  cdi + cb + embi , data=df)
importance(rf)
varImpPlot(rf)
rf = randomForest(as.factor(crise2) ~ rexc   + oil +  cdi + cb + embi , data=df, importance=T)
importance(rf)
varImpPlot(rf)
rf = randomForest(as.factor(crise2) ~ rexc   + oil +  cdi + cb + embi + gold, data=df, importance=T)
importance(rf)
varImpPlot(rf)
summary(m2)
m2 = glm(crise2~rexc + gold + cdi + cb + oil + embi, data=df)
summary(m2)
df$embi = as.numeric(df$embi)
m2 = glm(crise2~rexc + gold + cdi + cb + oil + embi, data=df)
summary(m2)
exp(-6.447e-03)
m3 = lm(crise2~rexc + gold + cdi + cb + oil + embi, data=df)
m2 = glm(crise2~rexc + gold + cdi + cb + oil + embi, data=df, family = 'binomial')
summary(m2)
m3 = lm(crise2~rexc + gold + cdi + cb + oil + embi, data=df)
summary(m3)
m1 = glm(crise2~rexc, data=df, family = 'binomial')
summary(m1)
