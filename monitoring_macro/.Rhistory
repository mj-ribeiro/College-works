mu <- 0
sig2e <- 2500
sde <- sqrt(sig2e)
yhat1 <- b1+b2*x1
yhat2 <- b1+b2*x2
curve(dnorm(x, mean=yhat1, sd=sde), 0, 500, col="blue")
curve(dnorm(k, mean=yhat1, sd=sde), 0, 500, col="blue")
rm(x)
N <- 40
x1 <- 10
x2 <- 20
b1 <- 100
b2 <- 10
mu <- 0
sig2e <- 2500
sde <- sqrt(sig2e)
yhat1 <- b1+b2*x1
yhat2 <- b1+b2*x2
curve(dnorm(x, mean=yhat1, sd=sde), 0, 500, col="blue")
curve((k))
curve((x))
curve((x^2))
curve((x^3))
curve((x^3), xlim = c(-1,1))
curve((x), xlim = c(-1,1))
plot(y)
curve((x), xlim = c(-1,1))
plot(rnorm(30), col='lightblue')
curve((x), xlim = c(-1,1), add=T)
curve((x), xlim = c(-1,1), add=T)
curve((x), xlim = c(-1,1))
plot(rnorm(30), col='lightblue')
plot(rnorm(30,0,1), col='lightblue')
plot(rnorm(30,0,1), col='lightblue')
curve((x), add=T)
plot(rnorm(30,0,1), col='lightblue')
curve((x^2), add=T)
curve((x+2), add=T)
curve((x+2X), add=T)
curve((x+2x), add=T)
curve((x+2*x), add=T)
curve((x+2*x), add=T)
plot(rnorm(30,0,1), col='lightblue')
curve((x+2*x), add=T)
curve((2*x+2*x), add=T)
curve((0.8*x+2*x), add=T)
curve((0.01x), add=T)
curve((0.01*x), add=T)
curve((0.1*x), add=T)
plot(abs(rnorm(30,0,1)), col='lightblue')
curve((0.1*x), add=T)
plot(abs(rnorm(30,0,1)), col='gray')
curve((0.1*x), add=T)
plot(abs(rnorm(30,0,1)), col='gray', lwd=19)
curve((0.1*x), add=T)
plot(abs(rnorm(30,0,1)), col='gray', lwd=19, size=3)
plot(abs(rnorm(30,0,1)), col='gray', lwd=19)
curve((0.1*x), add=T)
plot(abs(rnorm(30,0,1)), col='gray', lwd=19)
curve((0.1*x), add=T, col='red')
curve(dnorm(x))
curve(dnorm(x), xlim=c(-1,1))
curve(dnorm(x), xlim=c(-3,3))
curve(dnorm(x), xlim=c(-4,4))
curve(dnorm(x), xlim=c(-6,6))
curve(dnorm(x), xlim=c(-8,8))
write.csv(ret, 'ret')
write.table(ret, 'ret')
write.xlsx(ret, 'ret')
library(xlsx)
write.xlsx(ret, 'ret')
write.xlsx(ret, 'c:/ret.xlsx')
write.xlsx(ret,"C:/Users/user/Documents/ret.xlsx")
spec2 = ugarchspec(variance.model=list(model="sGARCH",
garchOrder=c(1,1)),
mean.model=list(armaOrder=c(0,0), include.mean=TRUE),
distribution.model="norm")
garch3 = ugarchfit(spec = spec2, data= ret)
garch3
spec1 = ugarchspec(variance.model=list(model="fGARCH",
garchOrder=c(1,1), submodel='TGARCH'),
mean.model=list(armaOrder=c(0,0), include.mean=TRUE, archm=T),
distribution.model="norm")
garch2 = ugarchfit(spec = spec1, data= ret)
garch2
sd(ret)
library(sn)
curve(dsn(x))
curve(dsn(x), ylim=c(-8,8))
curve(dsn(x), ylim=c(0,8))
curve(dsn(x, xi = 2), ylim=c(0,8))
curve(dsn(x, xi = 2, omega = 0.2, alpha = 0.22), ylim=c(0,8))
curve(dsn(x, xi = 2, omega = 0.2, alpha = 0.22))
curve(dsn(x, xi = 22, omega = 0.2, alpha = 0.22))
curve(dsn(x, omega = 0.2, alpha = 0.22))
curve(dsn(x, omega = 3, alpha = 0.22))
curve(dsn(x, omega = 8, alpha = 0.22))
curve(dsn(x, omega = 8, alpha = 0.22), , ylim=c(0,8))
curve(dsn(x, omega = 8, alpha = 0.22), , ylim=c(-8,8))
curve(dsn(x, omega = 8, alpha = 0.22), , ylim=c(0,8))
curve(dsn(x, omega = 8, alpha = 0.22), , ylim=c(0,0.8))
curve(dsn(x, omega = 8, alpha = 0.22))
curve(dsn(x, omega = 0.11, alpha = 0.22))
curve(dsn(x, omega = 0.21, alpha = 0.22))
curve(dsn(x, omega = 0.41, alpha = 0.22))
curve(dsn(x, omega = 0.1, alpha = 0.22))
curve(dsn(x, omega = 0.1, alpha = 2))
curve(dsn(x, omega = 0.1, alpha = 10))
curve(dsn(x, omega = 0.1, alpha = 100))
curve(dsn(x, omega = 0.1, alpha = 0.011))
curve(dst(x, omega = 0.1, alpha = 0.011))
curve(dst(x, omega = 1, alpha = 0.011))
curve(dst(x, omega = 1, alpha = 0.11))
curve(dst(x, omega = 1, alpha = 11))
curve(dst(x, omega = 0.9, alpha = 11))
curve(dst(x, omega = 0.11, alpha = 11))
curve(dst(x, omega = 0.11, alpha = 0.11))
rst(x, omega = 0.11, alpha = 0.11))
rst(100, omega = 0.11, alpha = 0.11))
rst(100, omega = 0.11, alpha = 0.11)
rst(100, omega = 0.2, alpha = 0.11, xi = 2)
rst(100, omega = 0.2, alpha = 0.11, xi = 0)
rst(100, omega = 0.2, alpha = 0.11, xi = 0, nu = 2)
sin(30)
sin(30Â°)
sin(30)
sin(pi/6)
tan(pi/6)
curve(sin(x))
curve(sin(x), xlim = c(-3,3))
curve(sin(x), xlim = c(-30,30))
curve(sin(x), xlim = c(-10,10))
line(h=0)
aline(h=0)
abline(h=0)
curve(tan(x), xlim = c(-10,10))
curve(tan(x), xlim = c(-10,10))
abline(h=0)
curve((x), xlim = c(-10,10))
abline(v=0)
curve((x), xlim = c(0,10))
abline(v=0)
abline(v=10)
curve((x), xlim = c(0,10))
abline(v=10)
atan(1)
atan(pi)
pi/4
tan(pi/3)
tan(2*pi/3)
fd = function(x, alpha){
disf = exp(-x^alpha)
}
fd(2, 1)
fd = function(x, alpha){
disf = exp(-x^alpha)
return(disf)
}
fd(2, 1)
fd(0.2, 1)
curve(fd(x, 1))
curve(fd(x, 1), xlim = c(-10,10))
fd = function(x, alpha){
disf = exp(-x^(-alpha))
return(disf)
}
curve(fd(x, 1), xlim = c(-10,10))
curve(fd(x, 1), xlim = c(0,10))
curve(fd(x, 1), xlim = c(0,4))
install.packages('Rtolls40')
install.packages('Rtolls')
library(installr)
updateR()
updateR()
install.packages('Rtolls')
install.packages(c("fGarch", "forecast", "installr", "quantmod", "rugarch", "timeSeries", "tseries", "vars", "xlsx"))
install.packages('Rtolls')
install.packages('Rtolls40')
install.packages('rtolls40')
curve(x^0.4)
curve(x^0.4, ylim = c(0, 4))
curve(x^0.4, ylim = c(0, 1))
curve(x^0.2, ylim = c(0, 1))
curve(x^0.1, ylim = c(0, 1))
curve(x^0.01, ylim = c(0, 1))
curve(x^0.001, ylim = c(0, 1))
curve(x^0.1, ylim = c(0, 1))
curve(x^1, ylim = c(0, 1))
curve(x^0.1, ylim = c(0, 1))
curve(x^0.2, ylim = c(0, 1))
curve(x^0.4, ylim = c(0, 1), add=T)
install.packages("knitr")
2.5*0.4
0.7*0.05
0.035-0.04
-0.4*0.7
0.4*0.005
0.4*0.005+0.08
0.082/1.28
4*0.7
4*0.3
1.2/2.8
factorial(58)/(factorial(4)*factorial(54))
factorial(58)/(factorial(3)*factorial(55))
setwd("D:/Git projects/college_works/monitoring_macro")
library(ggplot2)
library(haven)
df <- read_dta("felicidade.dta")
f2 = df[year==2015, ]
g3 = ggplot(data = f2, aes(x= cresppc, y=lld,
alpha=I(0.5)))+
geom_text(aes(label=CountryCode), size=4)
windows()
g3
attach(df)
f2 = df[year==2015, ]
g3 = ggplot(data = f2, aes(x= cresppc, y=lld,
alpha=I(0.5)))+
geom_text(aes(label=CountryCode), size=4)
windows()
g3
View(df)
df <- read_dta("felicidade.dta")
View(df)
df <- read_dta("happy.dta")
f2 = df[year==2015, ]
g3 = ggplot(data = f2, aes(x= cresppc, y=lld,
alpha=I(0.5)))+
geom_text(aes(label=CountryCode), size=4)
windows()
g3
View(df)
df <- read_dta("happy.dta")
attach(df)
f1 = df[year>2010, ]
f2 = df[year==2015, ]
g3 = ggplot(data = f2, aes(x= cresppc, y=lld,
alpha=I(0.5)))+
geom_text(aes(label=CountryCode), size=4)
windows()
g3
g3 + geom_smooth(method = 'lm',formula = y~x, color='black') +
xlab('Unemployment') +
ylab('Rate of change in inflation') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
g3 + geom_smooth(method = 'lm',formula = y~x, color='black') +
ggtitle('Phillips Curve') +
xlab('GPD Growth') +
ylab('Cantrill Ladder') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
f2 = df[year==2014, ]
g3 = ggplot(data = f2, aes(x= cresppc, y=lld,
alpha=I(0.5)))+
geom_text(aes(label=CountryCode), size=4)
g3 + geom_smooth(method = 'lm',formula = y~x, color='black') +
ggtitle('Happiness and Economic Growth') +
xlab('GPD Growth') +
ylab('Cantrill Ladder') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
g4 = g3 + geom_smooth(method = 'lm',formula = y~x, color='black') +
ggtitle('Happiness and Economic Growth') +
xlab('GPD Growth') +
ylab('Cantrill Ladder') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
windows()
g4
View(f1)
View(f1)
g3 = ggplot(data = f2, aes(x=ppc/10000, y=lld,
alpha=I(0.5)))+
geom_text(aes(label=CountryCode), size=4)
g4 = g3 + geom_smooth(method = 'lm',formula = y~x, color='black') +
ggtitle('Happiness and Economic Growth') +
xlab('GPD Growth') +
ylab('Cantrill Ladder') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
windows()
g4
g4 = g3 + geom_smooth(method = 'lm',formula = y~x, color='black') +
ggtitle('Happiness and Economic Growth') +
xlab('GPD per capita') +
ylab('Cantrill Ladder') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
windows()
g4
g4 = g3 + geom_smooth(method = 'lm',formula = y~x, color='black', se=F) +
ggtitle('Happiness and Economic Growth') +
xlab('GPD per capita') +
ylab('Cantrill Ladder') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
windows()
g4
f2 = df[year==2014, ]
g3 = ggplot(data = f2, aes(x=ppc/10000, y=lld,
alpha=I(0.5)))+
geom_text(aes(label=CountryCode), size=4)
g4 = g3 + geom_smooth(method = 'lm',formula = y~x, color='black', se=F) +
ggtitle('Happiness and Economic Growth') +
xlab('GPD per capita') +
ylab('Cantrill Ladder') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
windows()
g4
windows()
g4
f2 = df[year==2011, ]
g3 = ggplot(data = f2, aes(x=ppc/10000, y=lld,
alpha=I(0.5)))+
geom_text(aes(label=CountryCode), size=4)
g4 = g3 + geom_smooth(method = 'lm',formula = y~x, color='black', se=F) +
ggtitle('Happiness and GPD per capita') +
xlab('GPD per capita') +
ylab('Cantrill Ladder') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
windows()
g4
windows()
g4
g4
windows()
g4
g5 = ggplot(data = f2, aes(x=ginigallup, y=lld,
alpha=I(0.5)))+
geom_text(aes(label=CountryCode), size=4)
g6 = g5 + geom_smooth(method = 'lm',formula = y~x, color='black', se=F) +
ggtitle('Happiness and Gini') +
xlab('Gini') +
ylab('Cantrill Ladder') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
windows()
g6
g6[gini<0.6]
g6[ginigallup<0.6]
f2 = df[year==2011 & ginigallup <=0.5, ]
f3 = df[year==2011 & ginigallup <=0.5, ]
g5 = ggplot(data = f3, aes(x=ginigallup, y=lld,
alpha=I(0.5)))+
geom_text(aes(label=CountryCode), size=4)
g6 = g5 + geom_smooth(method = 'lm',formula = y~x, color='black', se=F) +
ggtitle('Happiness and Gini') +
xlab('Gini') +
ylab('Cantrill Ladder') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
windows()
g6
f2 = df[year==2011, ]
g7 = ggplot(data = f3, aes(x=hc, y=lld,
alpha=I(0.5)))+
geom_text(aes(label=CountryCode), size=4)
f2 = df[year==2011, ]
g7 = ggplot(data = f3, aes(x=hc, y=lld,
alpha=I(0.5)))+
geom_text(aes(label=CountryCode), size=4)
g7 = g8 + geom_smooth(method = 'lm',formula = y~x, color='black', se=F) +
ggtitle('Happiness and HC') +
xlab('HC') +
ylab('Cantrill Ladder') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
g7 = ggplot(data = f3, aes(x=hc, y=lld,
alpha=I(0.5)))+
geom_text(aes(label=CountryCode), size=4)
g8 = g7 + geom_smooth(method = 'lm',formula = y~x, color='black', se=F) +
ggtitle('Happiness and HC') +
xlab('HC') +
ylab('Cantrill Ladder') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
windows()
g8
f2 = df[year==2011, ]
g9 = ggplot(data = f3, aes(x=hc, y=ppc/10000,
alpha=I(0.5)))+
geom_text(aes(label=CountryCode), size=4)
g10 = g9 + geom_smooth(method = 'lm',formula = y~x, color='black', se=F) +
ggtitle('PPC and HC') +
xlab('HC') +
ylab('PPC') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
windows()
g10
g9 = ggplot(data = f3, aes(x=hc, y=ppc/10000,
alpha=I(0.7)))+
geom_text(aes(label=CountryCode), size=4, color='black')
g10 = g9 + geom_smooth(method = 'lm',formula = y~x, color='black', se=F) +
ggtitle('PPC and HC') +
xlab('HC') +
ylab('PPC') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
windows()
g10
g10 = g9 + geom_smooth(method = 'lm',formula = y~x, color=rendacod, se=F) +
ggtitle('PPC and HC') +
xlab('HC') +
ylab('PPC') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
windows()
g10
g9 = ggplot(data = f3, aes(x=hc, y=ppc/10000,
alpha=I(0.7)))+
geom_text(aes(label=CountryCode), size=4, color=rendacod)
g10 = g9 + geom_smooth(method = 'lm',formula = y~x, se=F) +
ggtitle('PPC and HC') +
xlab('HC') +
ylab('PPC') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
windows()
g10
g9 = ggplot(data = f3, aes(x=hc, y=ppc/10000,
alpha=(0.7), colour=rendacod))+
geom_text(aes(label=CountryCode), size=4, color='black')
g10 = g9 + geom_smooth(method = 'lm',formula = y~x, se=F) +
ggtitle('PPC and HC') +
xlab('HC') +
ylab('PPC') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
windows()
g10
g9 = ggplot(data = f3, aes(x=hc, y=ppc/10000,
colour=rendacod))+
geom_text(aes(label=CountryCode), size=4, color='black')
g10 = g9 + geom_smooth(method = 'lm',formula = y~x, se=F) +
ggtitle('PPC and HC') +
xlab('HC') +
ylab('PPC') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
windows()
g10
g9 = ggplot(data = f3, aes(x=hc, y=ppc/10000,
colour=rendacod))+
geom_text(aes(label=CountryCode), size=4, colour=rendacod)
g10 = g9 + geom_smooth(method = 'lm',formula = y~x, se=F) +
ggtitle('PPC and HC') +
xlab('HC') +
ylab('PPC') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
windows()
g10
g9 = ggplot(data = f3, aes(x=hc, y=ppc/10000,
colour=rendacod))+
geom_text(aes(label=CountryCode), size=4)
g10 = g9 + geom_smooth(method = 'lm',formula = y~x, se=F) +
ggtitle('PPC and HC') +
xlab('HC') +
ylab('PPC') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
windows()
g10
g9 = ggplot(data = f3, aes(x=hc, y=ppc/10000,
colour=factor(rendacod)))+
geom_text(aes(label=CountryCode), size=4)
g10 = g9 + geom_smooth(method = 'lm',formula = y~x, se=F) +
ggtitle('PPC and HC') +
xlab('HC') +
ylab('PPC') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
windows()
g10
g9 = ggplot(data = f3, aes(x=hc, y=ppc/10000,
colour=factor(rendacod)))+
geom_text(aes(label=CountryCode), size=4)
g10 = g9 +
ggtitle('PPC and HC') +
xlab('HC') +
ylab('PPC') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
windows()
g10
