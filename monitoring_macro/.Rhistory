auto.assign = F)[,4]
#----- returns
ret = diff(log(ibov))
colnames(ret) = c('ret')
ret = ret[is.na(ret)==F]  # Drop na to work
#---- GARCH Model
spec1 = ugarchspec(variance.model=list(model="fGARCH",
garchOrder=c(1,1), submodel='TGARCH'),
mean.model=list(armaOrder=c(0,0), include.mean=TRUE, archm=T),
distribution.model="norm")
garch2 = ugarchfit(spec = spec1, data= ret)
garch2
ts.plot(sigma(garch2))
plot(ret**2)
windows()
for(i in 1:(length(ret)-1)){
plot(as.vector( ret[1:(1+i)]), col='blue')
}
library(vars)
x = rnorm(1000)
y = rnorm(1000)
vmat = as.matrix(cbind(y, x))
vmat
head(vmat)
tail(vmat)
vfit = VAR(vmat)
summary(vfit)
irf(vfit)
plot(irf(vfit))
summary(vfit)
vfit
vfit = VAR(vmat, p=2)
summary(vfit)
curve(x)
curve(x)
curve(dnorm(x))
curve(dnorm(k, mean = 0, sd=1))
call(x)
N <- 40
x1 <- 10
x2 <- 20
b1 <- 100
b2 <- 10
mu <- 0
sig2e <- 2500
sde <- sqrt(sig2e)
yhat1 <- b1+b2*x1
yhat2 <- b1+b2*x2
curve(dnorm(x, mean=yhat1, sd=sde), 0, 500, col="blue")
curve(dnorm(k, mean=yhat1, sd=sde), 0, 500, col="blue")
rm(x)
N <- 40
x1 <- 10
x2 <- 20
b1 <- 100
b2 <- 10
mu <- 0
sig2e <- 2500
sde <- sqrt(sig2e)
yhat1 <- b1+b2*x1
yhat2 <- b1+b2*x2
curve(dnorm(x, mean=yhat1, sd=sde), 0, 500, col="blue")
curve((k))
curve((x))
curve((x^2))
curve((x^3))
curve((x^3), xlim = c(-1,1))
curve((x), xlim = c(-1,1))
plot(y)
curve((x), xlim = c(-1,1))
plot(rnorm(30), col='lightblue')
curve((x), xlim = c(-1,1), add=T)
curve((x), xlim = c(-1,1), add=T)
curve((x), xlim = c(-1,1))
plot(rnorm(30), col='lightblue')
plot(rnorm(30,0,1), col='lightblue')
plot(rnorm(30,0,1), col='lightblue')
curve((x), add=T)
plot(rnorm(30,0,1), col='lightblue')
curve((x^2), add=T)
curve((x+2), add=T)
curve((x+2X), add=T)
curve((x+2x), add=T)
curve((x+2*x), add=T)
curve((x+2*x), add=T)
plot(rnorm(30,0,1), col='lightblue')
curve((x+2*x), add=T)
curve((2*x+2*x), add=T)
curve((0.8*x+2*x), add=T)
curve((0.01x), add=T)
curve((0.01*x), add=T)
curve((0.1*x), add=T)
plot(abs(rnorm(30,0,1)), col='lightblue')
curve((0.1*x), add=T)
plot(abs(rnorm(30,0,1)), col='gray')
curve((0.1*x), add=T)
plot(abs(rnorm(30,0,1)), col='gray', lwd=19)
curve((0.1*x), add=T)
plot(abs(rnorm(30,0,1)), col='gray', lwd=19, size=3)
plot(abs(rnorm(30,0,1)), col='gray', lwd=19)
curve((0.1*x), add=T)
plot(abs(rnorm(30,0,1)), col='gray', lwd=19)
curve((0.1*x), add=T, col='red')
curve(dnorm(x))
curve(dnorm(x), xlim=c(-1,1))
curve(dnorm(x), xlim=c(-3,3))
curve(dnorm(x), xlim=c(-4,4))
curve(dnorm(x), xlim=c(-6,6))
curve(dnorm(x), xlim=c(-8,8))
write.csv(ret, 'ret')
write.table(ret, 'ret')
write.xlsx(ret, 'ret')
library(xlsx)
write.xlsx(ret, 'ret')
write.xlsx(ret, 'c:/ret.xlsx')
write.xlsx(ret,"C:/Users/user/Documents/ret.xlsx")
spec2 = ugarchspec(variance.model=list(model="sGARCH",
garchOrder=c(1,1)),
mean.model=list(armaOrder=c(0,0), include.mean=TRUE),
distribution.model="norm")
garch3 = ugarchfit(spec = spec2, data= ret)
garch3
spec1 = ugarchspec(variance.model=list(model="fGARCH",
garchOrder=c(1,1), submodel='TGARCH'),
mean.model=list(armaOrder=c(0,0), include.mean=TRUE, archm=T),
distribution.model="norm")
garch2 = ugarchfit(spec = spec1, data= ret)
garch2
sd(ret)
library(sn)
curve(dsn(x))
curve(dsn(x), ylim=c(-8,8))
curve(dsn(x), ylim=c(0,8))
curve(dsn(x, xi = 2), ylim=c(0,8))
curve(dsn(x, xi = 2, omega = 0.2, alpha = 0.22), ylim=c(0,8))
curve(dsn(x, xi = 2, omega = 0.2, alpha = 0.22))
curve(dsn(x, xi = 22, omega = 0.2, alpha = 0.22))
curve(dsn(x, omega = 0.2, alpha = 0.22))
curve(dsn(x, omega = 3, alpha = 0.22))
curve(dsn(x, omega = 8, alpha = 0.22))
curve(dsn(x, omega = 8, alpha = 0.22), , ylim=c(0,8))
curve(dsn(x, omega = 8, alpha = 0.22), , ylim=c(-8,8))
curve(dsn(x, omega = 8, alpha = 0.22), , ylim=c(0,8))
curve(dsn(x, omega = 8, alpha = 0.22), , ylim=c(0,0.8))
curve(dsn(x, omega = 8, alpha = 0.22))
curve(dsn(x, omega = 0.11, alpha = 0.22))
curve(dsn(x, omega = 0.21, alpha = 0.22))
curve(dsn(x, omega = 0.41, alpha = 0.22))
curve(dsn(x, omega = 0.1, alpha = 0.22))
curve(dsn(x, omega = 0.1, alpha = 2))
curve(dsn(x, omega = 0.1, alpha = 10))
curve(dsn(x, omega = 0.1, alpha = 100))
curve(dsn(x, omega = 0.1, alpha = 0.011))
curve(dst(x, omega = 0.1, alpha = 0.011))
curve(dst(x, omega = 1, alpha = 0.011))
curve(dst(x, omega = 1, alpha = 0.11))
curve(dst(x, omega = 1, alpha = 11))
curve(dst(x, omega = 0.9, alpha = 11))
curve(dst(x, omega = 0.11, alpha = 11))
curve(dst(x, omega = 0.11, alpha = 0.11))
rst(x, omega = 0.11, alpha = 0.11))
rst(100, omega = 0.11, alpha = 0.11))
rst(100, omega = 0.11, alpha = 0.11)
rst(100, omega = 0.2, alpha = 0.11, xi = 2)
rst(100, omega = 0.2, alpha = 0.11, xi = 0)
rst(100, omega = 0.2, alpha = 0.11, xi = 0, nu = 2)
sin(30)
sin(30Â°)
sin(30)
sin(pi/6)
tan(pi/6)
curve(sin(x))
curve(sin(x), xlim = c(-3,3))
curve(sin(x), xlim = c(-30,30))
curve(sin(x), xlim = c(-10,10))
line(h=0)
aline(h=0)
abline(h=0)
curve(tan(x), xlim = c(-10,10))
curve(tan(x), xlim = c(-10,10))
abline(h=0)
curve((x), xlim = c(-10,10))
abline(v=0)
curve((x), xlim = c(0,10))
abline(v=0)
abline(v=10)
curve((x), xlim = c(0,10))
abline(v=10)
atan(1)
atan(pi)
pi/4
tan(pi/3)
tan(2*pi/3)
fd = function(x, alpha){
disf = exp(-x^alpha)
}
fd(2, 1)
fd = function(x, alpha){
disf = exp(-x^alpha)
return(disf)
}
fd(2, 1)
fd(0.2, 1)
curve(fd(x, 1))
curve(fd(x, 1), xlim = c(-10,10))
fd = function(x, alpha){
disf = exp(-x^(-alpha))
return(disf)
}
curve(fd(x, 1), xlim = c(-10,10))
curve(fd(x, 1), xlim = c(0,10))
curve(fd(x, 1), xlim = c(0,4))
install.packages('Rtolls40')
install.packages('Rtolls')
library(installr)
updateR()
updateR()
install.packages('Rtolls')
install.packages(c("fGarch", "forecast", "installr", "quantmod", "rugarch", "timeSeries", "tseries", "vars", "xlsx"))
install.packages('Rtolls')
install.packages('Rtolls40')
install.packages('rtolls40')
curve(x^0.4)
curve(x^0.4, ylim = c(0, 4))
curve(x^0.4, ylim = c(0, 1))
curve(x^0.2, ylim = c(0, 1))
curve(x^0.1, ylim = c(0, 1))
curve(x^0.01, ylim = c(0, 1))
curve(x^0.001, ylim = c(0, 1))
curve(x^0.1, ylim = c(0, 1))
curve(x^1, ylim = c(0, 1))
curve(x^0.1, ylim = c(0, 1))
curve(x^0.2, ylim = c(0, 1))
curve(x^0.4, ylim = c(0, 1), add=T)
install.packages("knitr")
install.packages("e1071")
install.packages(c("extraDistr", "fitdistrplus", "GetBCBData", "PerformanceAnalytics", "propagate", "sn"))
inf = gbcbd_get_series(433, first.date= '1980-01-01', last.date = '2020-04-01',
format.data = "long", be.quiet = FALSE)[ ,1:2]
library(GetBCBData)
inf = gbcbd_get_series(433, first.date= '1980-01-01', last.date = '2020-04-01',
format.data = "long", be.quiet = FALSE)[ ,1:2]
View(inf)
inf = gbcbd_get_series(433, first.date= '2000-01-01', last.date = '2020-04-01',
format.data = "long", be.quiet = FALSE)[ ,1:2]
inf = gbcbd_get_series(433, first.date= '1990-01-01', last.date = '2020-04-01',
format.data = "long", be.quiet = FALSE)[ ,1:2]
inf = gbcbd_get_series(433, first.date= '1981-01-01', last.date = '2020-04-01',
format.data = "long", be.quiet = FALSE)[ ,1:2]
plot(inf)
plot(inf, type='l')
View(inf)
setwd("D:/Git projects/college_works/monitoring_macro")
des = gbcbd_get_series(10777, first.date= '1981-01-01', last.date = '2020-04-01',
format.data = "long", be.quiet = FALSE)[ ,1:2]
View(inf)
View(des)
plot(des)
View(inf)
View(des)
data = inf$ref.date
inf[,1]=NULL
inf = xts(cb, order.by = data)
install.packages('xts')
library('xts')
inf = xts(cb, order.by = data)
inf = xts(inf, order.by = data)
data1 = des$ref.date
des[,1]=NULL
des = xts(des, order.by = data1)
plot(inf, type='l')
inf[index(des)]
plot(inf[index(des)])
plot(inf[index(des)], des)
plot(inf[index(des)], des, type='s')
plot(inf[index(des)], des, type='h')
plot(inf[index(des)], des, type='r')
df = data.frame(des, inf[index(des)])
## plots
library(ggplot2)
ggplot(data = df, aes(x = `inf`, y= `des`,
alpha=0.5)) + geom_point()
View(df)
colnames(inf) = inf
colnames(inf) = 'inf'
View(inf)
colnames(des) = 'des'
df = data.frame(des, inf[index(des)])
ggplot(data = df, aes(x = `inf`, y= `des`,
alpha=0.5)) + geom_point()
ggplot(data = df, aes(x = `des`, y= `inf`,
alpha=0.5)) + geom_point()
ggplot(data = df, aes(x = `des`, y= `inf`)
ggplot(data = df, aes(x = `des`, y= `inf`)
ggplot(data = df, aes(x = `des`, y= `inf`)
+ geom_point()
dinf = diff(inf)
dinf = diff(inf)
df = data.frame(des, dinf[index(des)])
windows()
ggplot(data = df, aes(x = `des`, y= `dinf`)
+ geom_point()
ggplot(data = df, aes(x = `des`, y= `dinf`)
+ geom_point()
ggplot(data = df, aes(x = `des`, y= `dinf`)
+ geom_point()
ggplot(data = df, aes(x = `des`, y= `dinf`)
+ geom_point()
ggplot(data = df, aes(x = `des`, y= `dinf`)
+ geom_point()
ggplot(data = df, aes(x = `des`, y= `dinf`)
+ geom_point()
g1 = ggplot(data = df, aes(x = `des`, y= `dinf`)
g1 = ggplot(data = df, aes(x = `des`, y= `dinf`))
g1 = ggplot(data = df, aes(x = `des`, y= `dinf`))
g1 + geom_point()
g1 + geom_point()
g1 = ggplot(data = df, aes(x = `des`, y =`dinf`), alpha=0.5)
g1 + geom_point()
View(df)
colnames(dinf) = 'dinf'
df = data.frame(des, dinf[index(des)])
windows()
g1 = ggplot(data = df, aes(x = `des`, y =`dinf`), alpha=0.5)
g1 + geom_point()
reg1 = lm(dinf ~ des, data = df)
summary(reg1)
g1 + geom_point()
g1 + geom_point(color='blue', size=2)
View(df)
df[1:100]
df[1:100, ]
windows()
g1 = ggplot(data = df[1:100, ], aes(x = `des`, y =`dinf`), alpha=0.5)
g1 + geom_point(color='blue', size=2)
windows()
g1 = ggplot(data = df[1:50, ], aes(x = `des`, y =`dinf`), alpha=0.5)
g1 + geom_point(color='blue', size=2)
summary(reg1)
des = gbcbd_get_series(24369, first.date= '1981-01-01', last.date = '2020-04-01',
format.data = "long", be.quiet = FALSE)[ ,1:2]
data1 = des$ref.date
des[,1]=NULL
colnames(des) = 'des'
des = xts(des, order.by = data1)
library(ggplot2)
df = data.frame(des, dinf[index(des)])
windows()
g1 = ggplot(data = df[1:50, ], aes(x = `des`, y =`dinf`), alpha=0.5)
g1 + geom_point(color='blue', size=2)
reg1 = lm(dinf ~ des, data = df)
summary(reg1)
windows()
g1 = ggplot(data = df, aes(x = `des`, y =`dinf`), alpha=0.5)
g1 + geom_point(color='blue', size=2)
g1 + geom_point(color='blue', size=2)
reg1 = lm(dinf ~ des, data = df)
summary(reg1)
reg1 = lm(dinf ~ des[1:50,], data = df)
reg1 = lm(dinf ~ des, data = df[1:50,])
summary(reg1)
reg1 = lm(dinf ~ des, data = df[1:60,])
summary(reg1)
reg1 = lm(dinf ~ des, data = df[1:40,])
summary(reg1)
reg1 = lm(dinf ~ des, data = df[50:97,])
summary(reg1)
g1 = ggplot(data = df, aes(x = `des`, y =`dinf`), alpha=0.5, main='Phillips Curve')
g1 + geom_point(color='blue', size=2)
g1 + geom_point(color='blue', size=2) + main='Phillips Curve'
g1 + geom_point(color='blue', size=2) + main('Phillips Curve')
g1 + geom_point(color='blue', size=2) + title('Phillips Curve')
g1 + geom_point(color='blue', size=2) + title('Phillips Curve')
g1 + geom_point(color='blue', size=2) + ggtitle('Phillips Curve')
g1 + geom_point(color='blue', size=2) +
ggtitle('Phillips Curve') + xlab('Unemployment') +
ylab('Rate of change in inflation') +
theme(axis.title.x = element_text(colour = 'blue', size=30),
axis.title.y = element_text(colour = 'green', size=30),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=20),
legend.text = element_text(size=15),
legend.position = c(1,1),
legend.justification = c(1,1))
g1 + geom_point(color='blue', size=2) +
ggtitle('Phillips Curve') + xlab('Unemployment') +
ylab('Rate of change in inflation') +
theme(axis.title.x = element_text(colour = 'black', size=10),
axis.title.y = element_text(colour = 'black', size=10),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=20),
legend.text = element_text(size=15),
legend.position = c(1,1),
legend.justification = c(1,1))
g1 + geom_point(color='blue', size=2) +
ggtitle('Phillips Curve') + xlab('Unemployment') +
ylab('Rate of change in inflation') +
theme(axis.title.x = element_text(colour = 'black', size=15),
axis.title.y = element_text(colour = 'black', size=15),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=20),
legend.text = element_text(size=15),
legend.position = c(1,1),
legend.justification = c(1,1))
g1 + geom_point(color='blue', size=2) +
ggtitle('Phillips Curve') + xlab('Unemployment') +
ylab('Rate of change in inflation') +
theme(axis.title.x = element_text(colour = 'black', size=15),
axis.title.y = element_text(colour = 'black', size=15),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=20),
legend.text = element_text(size=15),
legend.position = c(1,1),
legend.justification = c(1,1), plot.title = element_text(hjust = 0.5))
g1 + geom_point(color='blue', size=2) +
ggtitle('Phillips Curve') + xlab('Unemployment') +
ylab('Rate of change in inflation') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=20),
legend.text = element_text(size=15),
legend.position = c(1,1),
legend.justification = c(1,1), plot.title = element_text(hjust = 0.5))
g1 + geom_point(color='blue', size=2) +
ggtitle('Phillips Curve') + xlab('Unemployment') +
ylab('Rate of change in inflation') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
plot.title = element_text(hjust = 0.5))
g1 + geom_point(color='blue', size=2) +
ggtitle('Phillips Curve') + xlab('Unemployment') +
ylab('Rate of change in inflation') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
ggplot(inf)
ggplot(`inf`)
ggplot(`inf`) + geom_line()
df = data.frame(des, dinf[index(des)],inf[index(des)])
ggplot(data=df, `inf`) + geom_line()
ggplot(data=df, aes(x=`inf`)) + geom_line()
ggplot(data=df, aes(x=`inf`) )
ggplot(data=df, aes(x=`inf`), alpha=0.5)
ggplot(data=df, aes(x=`inf`), alpha=0.5)+geom_line()
ggplot(data=df, aes(x=`inf`, y=`index(df)`), alpha=0.5)+geom_line()
ggplot(data=df, aes(x=`inf`, y=`data1`), alpha=0.5)+geom_line()
ggplot(data=df, aes(y=`inf`, x=`data1`), alpha=0.5)+geom_line()
pacf(inf)
ggplot(data=df, aes(y=`inf`, x=`data1`), alpha=0.5)+geom_line()
plot(inf)
ggplot(data=df, aes(y=`inf`, x=`data1`), alpha=0.5)+geom_line()
ggplot(aes(y=`inf`, x=`index(inf)`), alpha=0.5)+geom_line()
View(inf)
data3 = index(inf)
ggplot(aes(y=`inf`, x=`data3`), alpha=0.5)+geom_line()
dfinf = data.frame(data3, inf)
ggplot(data=dfinf, aes(y=`inf`, x=`data3`), alpha=0.5)+geom_line()
View(df)
reg1 = lm(dinf ~ des, data = df[1:24,])
summary(reg1)
reg1 = lm(dinf ~ des, data = df[1:36,])
summary(reg1)
reg1 = lm(dinf ~ des, data = df[1:30,])
summary(reg1)
reg1 = lm(dinf ~ des, data = df[1:40,])
summary(reg1)
windows()
g1 = ggplot(data = df[1:40,], aes(x = `des`, y =`dinf`), alpha=0.5)
g1 + geom_point(color='blue', size=2) +
ggtitle('Phillips Curve') +
xlab('Unemployment') +
ylab('Rate of change in inflation') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
g1 + geom_point(color='blue', size=2) +
ggtitle('Phillips Curve') +
geom_smooth(method = 'lm') +
xlab('Unemployment') +
ylab('Rate of change in inflation') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
g1 + geom_point(color='blue', size=2) +
ggtitle('Phillips Curve') +
geom_smooth(method = 'lm',formula = y~x) +
xlab('Unemployment') +
ylab('Rate of change in inflation') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
g1 + geom_point(color='blue', size=2) +
ggtitle('Phillips Curve') +
geom_smooth(method = 'lm',formula = y~x, color='black') +
xlab('Unemployment') +
ylab('Rate of change in inflation') +
theme(axis.title.x = element_text(colour = 'black', size=13),
axis.title.y = element_text(colour = 'black', size=13),
plot.title = element_text(hjust = 0.5))
summary(reg1)
reg2 = arima(inf, order=c(1,1,0))
summary(reg2)
reg2
View(reg2)
